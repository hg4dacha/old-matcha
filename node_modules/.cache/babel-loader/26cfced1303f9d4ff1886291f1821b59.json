{"ast":null,"code":"var _jsxFileName = \"/home/gadacha/Bureau/matcha/src/components/Profile/UserInfoSection.js\";\nimport React, { Fragment } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { IoSettingsOutline } from 'react-icons/io5';\nimport { IoIosArrowForward } from 'react-icons/io';\nimport { RiErrorWarningLine } from 'react-icons/ri';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserInfoSection = props => {\n  // const errorMsg = props.errorMsg ?\n  // <Form.Text className='generalError generalErrorDisplay' id='generalError' style={{top:'0'}}><RiErrorWarningLine style={{marginTop: '-2px', marginRight: '2px'}} />L'entrée n'est pas valide</Form.Text> :\n  // <Form.Text className='generalError' id='generalError' style={{top:'0'}}><RiErrorWarningLine style={{marginTop: '-2px', marginRight: '2px'}} />L'entrée n'est pas valide</Form.Text> ;\n  // const userInfo = !props.infoEdit ?\n  // <div className='info-rows'>\n  //     <div className='label-and-info'>\n  //         <span className='info-label'>{props.label}</span>\n  //         <span className='info-info'>{props.info}</span>\n  //     </div>\n  //     <div className='info-links' onClick={() => props.handleModification(props.id, props.infoEdit)}>\n  //         <div className='div-links'>\n  //             <div className='setting-and-arrow'>\n  //                 <IoSettingsOutline className='setting' />\n  //                 <IoIosArrowForward className='arrow' />\n  //             </div>\n  //         </div>\n  //     </div>\n  // </div> :\n  // <Form className='forms-profile' onSubmit={props.handleSubmitInfo(props.id, props.infoEdit)}>\n  //     <Form.Group controlId={props.id} className='form-group-profile'>\n  //         <Form.Label>{props.label}</Form.Label>\n  //         <Form.Control onChange={props.handleChange} value={props.info} type='text' placeholder=\"...\" className='form-control-profile' maxLength={props.maxLength} autoFocus/>\n  //         <Form.Text className=\"text-muted\">{props.small}</Form.Text>\n  //         <div style={{position: 'relative'}}>\n  //             {errorMsg}\n  //         </div>\n  //     </Form.Group>\n  //     <div className='div-buttons-form-profile'>\n  //         <Button variant=\"primary\" type=\"submit\" className='buttons-form-profile'>Enregistrer</Button>\n  //         <Button variant=\"danger\" type=\"button\" className='buttons-form-profile' onClick={() => props.handleModification(props.id, props.infoEdit)}>Annuler</Button>\n  //     </div>\n  // </Form>;\n  const handleChange = () => {\n    props.handlePersonalInformationChange;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n      as: Row,\n      className: \"mb-1\",\n      controlId: props.id,\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        column: true,\n        sm: \"2\",\n        children: props.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"10\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: props.value,\n          onChange: handleChange(),\n          placeholder: props.placeholder,\n          type: \"text\",\n          autoComplete: \"off\",\n          maxLength: props.maxLength,\n          className: \"form-control-profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_c = UserInfoSection;\nexport default UserInfoSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserInfoSection\");","map":{"version":3,"sources":["/home/gadacha/Bureau/matcha/src/components/Profile/UserInfoSection.js"],"names":["React","Fragment","Form","Button","IoSettingsOutline","IoIosArrowForward","RiErrorWarningLine","Row","Col","UserInfoSection","props","handleChange","handlePersonalInformationChange","id","label","value","placeholder","maxLength"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AACA,SAASC,iBAAT,QAAkC,iBAAlC;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,SAASC,kBAAT,QAAmC,gBAAnC;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;;;AAMA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAE/B;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEJ,QAAMC,YAAY,GAAG,MAAM;AACvBD,IAAAA,KAAK,CAACE,+BAAN;AACH,GAFD;;AAII,sBACI,QAAC,QAAD;AAAA,2BACI,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAEL,GAAhB;AAAqB,MAAA,SAAS,EAAC,MAA/B;AAAsC,MAAA,SAAS,EAAEG,KAAK,CAACG,EAAvD;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,MAAM,MAAlB;AAAmB,QAAA,EAAE,EAAC,GAAtB;AAAA,kBACKH,KAAK,CAACI;AADX;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAA,+BACI,QAAC,IAAD,CAAM,OAAN;AACI,UAAA,KAAK,EAAEJ,KAAK,CAACK,KADjB;AAEI,UAAA,QAAQ,EAAEJ,YAAY,EAF1B;AAGI,UAAA,WAAW,EAAED,KAAK,CAACM,WAHvB;AAII,UAAA,IAAI,EAAC,MAJT;AAKI,UAAA,YAAY,EAAC,KALjB;AAMI,UAAA,SAAS,EAAEN,KAAK,CAACO,SANrB;AAOI,UAAA,SAAS,EAAC;AAPd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CA5DD;;KAAMR,e;AA8DN,eAAeA,eAAf","sourcesContent":["import React, { Fragment } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { IoSettingsOutline } from 'react-icons/io5';\nimport { IoIosArrowForward } from 'react-icons/io';\nimport { RiErrorWarningLine } from 'react-icons/ri';\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\n\n\n\n\nconst UserInfoSection = (props) => {\n\n    // const errorMsg = props.errorMsg ?\n    // <Form.Text className='generalError generalErrorDisplay' id='generalError' style={{top:'0'}}><RiErrorWarningLine style={{marginTop: '-2px', marginRight: '2px'}} />L'entrée n'est pas valide</Form.Text> :\n    // <Form.Text className='generalError' id='generalError' style={{top:'0'}}><RiErrorWarningLine style={{marginTop: '-2px', marginRight: '2px'}} />L'entrée n'est pas valide</Form.Text> ;\n\n    // const userInfo = !props.infoEdit ?\n    // <div className='info-rows'>\n    //     <div className='label-and-info'>\n    //         <span className='info-label'>{props.label}</span>\n    //         <span className='info-info'>{props.info}</span>\n    //     </div>\n    //     <div className='info-links' onClick={() => props.handleModification(props.id, props.infoEdit)}>\n    //         <div className='div-links'>\n    //             <div className='setting-and-arrow'>\n    //                 <IoSettingsOutline className='setting' />\n    //                 <IoIosArrowForward className='arrow' />\n    //             </div>\n    //         </div>\n    //     </div>\n    // </div> :\n    // <Form className='forms-profile' onSubmit={props.handleSubmitInfo(props.id, props.infoEdit)}>\n    //     <Form.Group controlId={props.id} className='form-group-profile'>\n    //         <Form.Label>{props.label}</Form.Label>\n    //         <Form.Control onChange={props.handleChange} value={props.info} type='text' placeholder=\"...\" className='form-control-profile' maxLength={props.maxLength} autoFocus/>\n    //         <Form.Text className=\"text-muted\">{props.small}</Form.Text>\n    //         <div style={{position: 'relative'}}>\n    //             {errorMsg}\n    //         </div>\n    //     </Form.Group>\n    //     <div className='div-buttons-form-profile'>\n    //         <Button variant=\"primary\" type=\"submit\" className='buttons-form-profile'>Enregistrer</Button>\n    //         <Button variant=\"danger\" type=\"button\" className='buttons-form-profile' onClick={() => props.handleModification(props.id, props.infoEdit)}>Annuler</Button>\n    //     </div>\n    // </Form>;\n\nconst handleChange = () => {\n    props.handlePersonalInformationChange\n}\n\n    return (\n        <Fragment>\n            <Form.Group as={Row} className=\"mb-1\" controlId={props.id}>\n                <Form.Label column sm=\"2\">\n                    {props.label}\n                </Form.Label>\n                <Col sm=\"10\">\n                    <Form.Control\n                        value={props.value}\n                        onChange={handleChange()}\n                        placeholder={props.placeholder}\n                        type=\"text\"\n                        autoComplete='off'\n                        maxLength={props.maxLength}\n                        className='form-control-profile'\n                    />\n                </Col>\n            </Form.Group>\n        </Fragment>\n    )\n}\n\nexport default UserInfoSection"]},"metadata":{},"sourceType":"module"}