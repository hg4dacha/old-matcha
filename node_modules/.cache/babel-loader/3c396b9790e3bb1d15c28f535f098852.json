{"ast":null,"code":"var _jsxFileName = \"/home/gadacha/Bureau/matcha/src/components/Profile/UserInfoSection.js\";\nimport React, { Fragment } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { IoSettingsOutline } from 'react-icons/io5';\nimport { IoIosArrowForward } from 'react-icons/io';\nimport { RiErrorWarningLine } from 'react-icons/ri';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserInfoSection = props => {\n  // const errorMsg = props.errorMsg ?\n  // <Form.Text className='generalError generalErrorDisplay' id='generalError' style={{top:'0'}}><RiErrorWarningLine style={{marginTop: '-2px', marginRight: '2px'}} />L'entrée n'est pas valide</Form.Text> :\n  // <Form.Text className='generalError' id='generalError' style={{top:'0'}}><RiErrorWarningLine style={{marginTop: '-2px', marginRight: '2px'}} />L'entrée n'est pas valide</Form.Text> ;\n  // const userInfo = !props.infoEdit ?\n  // <div className='info-rows'>\n  //     <div className='label-and-info'>\n  //         <span className='info-label'>{props.label}</span>\n  //         <span className='info-info'>{props.info}</span>\n  //     </div>\n  //     <div className='info-links' onClick={() => props.handleModification(props.id, props.infoEdit)}>\n  //         <div className='div-links'>\n  //             <div className='setting-and-arrow'>\n  //                 <IoSettingsOutline className='setting' />\n  //                 <IoIosArrowForward className='arrow' />\n  //             </div>\n  //         </div>\n  //     </div>\n  // </div> :\n  // <Form className='forms-profile' onSubmit={props.handleSubmitInfo(props.id, props.infoEdit)}>\n  //     <Form.Group controlId={props.id} className='form-group-profile'>\n  //         <Form.Label>{props.label}</Form.Label>\n  //         <Form.Control onChange={props.handleChange} value={props.info} type='text' placeholder=\"...\" className='form-control-profile' maxLength={props.maxLength} autoFocus/>\n  //         <Form.Text className=\"text-muted\">{props.small}</Form.Text>\n  //         <div style={{position: 'relative'}}>\n  //             {errorMsg}\n  //         </div>\n  //     </Form.Group>\n  //     <div className='div-buttons-form-profile'>\n  //         <Button variant=\"primary\" type=\"submit\" className='buttons-form-profile'>Enregistrer</Button>\n  //         <Button variant=\"danger\" type=\"button\" className='buttons-form-profile' onClick={() => props.handleModification(props.id, props.infoEdit)}>Annuler</Button>\n  //     </div>\n  // </Form>;\n  return /*#__PURE__*/_jsxDEV(Fragment, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_c = UserInfoSection;\nexport default UserInfoSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserInfoSection\");","map":{"version":3,"sources":["/home/gadacha/Bureau/matcha/src/components/Profile/UserInfoSection.js"],"names":["React","Fragment","Form","Button","IoSettingsOutline","IoIosArrowForward","RiErrorWarningLine","UserInfoSection","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AACA,SAASC,iBAAT,QAAkC,iBAAlC;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,SAASC,kBAAT,QAAmC,gBAAnC;;;AAMA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAE/B;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,sBACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA7CD;;KAAMD,e;AA+CN,eAAeA,eAAf","sourcesContent":["import React, { Fragment } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { IoSettingsOutline } from 'react-icons/io5';\nimport { IoIosArrowForward } from 'react-icons/io';\nimport { RiErrorWarningLine } from 'react-icons/ri';\n\n\n\n\n\nconst UserInfoSection = (props) => {\n\n    // const errorMsg = props.errorMsg ?\n    // <Form.Text className='generalError generalErrorDisplay' id='generalError' style={{top:'0'}}><RiErrorWarningLine style={{marginTop: '-2px', marginRight: '2px'}} />L'entrée n'est pas valide</Form.Text> :\n    // <Form.Text className='generalError' id='generalError' style={{top:'0'}}><RiErrorWarningLine style={{marginTop: '-2px', marginRight: '2px'}} />L'entrée n'est pas valide</Form.Text> ;\n\n    // const userInfo = !props.infoEdit ?\n    // <div className='info-rows'>\n    //     <div className='label-and-info'>\n    //         <span className='info-label'>{props.label}</span>\n    //         <span className='info-info'>{props.info}</span>\n    //     </div>\n    //     <div className='info-links' onClick={() => props.handleModification(props.id, props.infoEdit)}>\n    //         <div className='div-links'>\n    //             <div className='setting-and-arrow'>\n    //                 <IoSettingsOutline className='setting' />\n    //                 <IoIosArrowForward className='arrow' />\n    //             </div>\n    //         </div>\n    //     </div>\n    // </div> :\n    // <Form className='forms-profile' onSubmit={props.handleSubmitInfo(props.id, props.infoEdit)}>\n    //     <Form.Group controlId={props.id} className='form-group-profile'>\n    //         <Form.Label>{props.label}</Form.Label>\n    //         <Form.Control onChange={props.handleChange} value={props.info} type='text' placeholder=\"...\" className='form-control-profile' maxLength={props.maxLength} autoFocus/>\n    //         <Form.Text className=\"text-muted\">{props.small}</Form.Text>\n    //         <div style={{position: 'relative'}}>\n    //             {errorMsg}\n    //         </div>\n    //     </Form.Group>\n    //     <div className='div-buttons-form-profile'>\n    //         <Button variant=\"primary\" type=\"submit\" className='buttons-form-profile'>Enregistrer</Button>\n    //         <Button variant=\"danger\" type=\"button\" className='buttons-form-profile' onClick={() => props.handleModification(props.id, props.infoEdit)}>Annuler</Button>\n    //     </div>\n    // </Form>;\n\n\n\n    return (\n        <Fragment>\n            {/* {userInfo} */}\n            {/* <hr/> */}\n            \n        </Fragment>\n    )\n}\n\nexport default UserInfoSection"]},"metadata":{},"sourceType":"module"}