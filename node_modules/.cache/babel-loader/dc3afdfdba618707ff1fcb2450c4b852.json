{"ast":null,"code":"var _jsxFileName = \"/home/gadacha/Bureau/matcha/src/components/Profile/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Fragment } from 'react';\nimport Navbar from '../NavBar/NavBar';\nimport UserInfoSection from './UserInfoSection';\nimport PasswordSection from './PasswordSection';\nimport AlertMsg from '../AlertMsg/AlertMsg';\nimport { NAMES_REGEX, USERNAME_REGEX, EMAIL_REGEX, PASSWORD_REGEX } from '../../other/Regex';\nimport { v4 as uuidv4 } from 'uuid';\nimport Alert from 'react-bootstrap/Alert';\nimport Form from 'react-bootstrap/Form';\nimport { RiUser3Fill } from 'react-icons/ri';\nimport { AiOutlineCheck } from 'react-icons/ai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = () => {\n  _s();\n\n  useEffect(() => {\n    document.title = 'Profil - Matcha';\n  }, []); // --------------------------------------------------------\n\n  /* modification of user information */\n  // const infoEdit$ = {\n  //     lastname: false,\n  //     firstname: false,\n  //     username: false,\n  //     email: false,\n  //     password: false\n  // }\n  // const [infoEdit, setInfoEdit] = useState(infoEdit$)\n  // const handleModification = (idInfo, thisInfo) => {\n  //     setInfoEdit(Object.assign(infoEdit, infoEdit$))\n  //     setData(Object.assign(data, _data)) // /!\\  À revoir. Lors de l'enregistrement de la nouvelle info puis le click sur 'annuler' ou 'modifier' l'info revient à l'origine.\n  //     setErrorDatas(Object.assign(errorDatas, errorDatas$))\n  //     setInfoEdit({...infoEdit, [idInfo]: !thisInfo})\n  // }\n  // --------------------------------------------------------\n  // USER'S PERSONAL INFORMATION ↓↓↓\n\n  const _usersPersonalInformation = {\n    lastname: 'Gadacha',\n    firstname: 'Honsse',\n    username: 'Username93',\n    email: 'test@gmail.com'\n  };\n  const [usersPersonalInformation, setUsersPersonalInformation] = useState(_usersPersonalInformation);\n\n  const handlePersonalInformationChange = e => {\n    setUsersPersonalInformation({ ...usersPersonalInformation,\n      [e.target.id]: e.target.value\n    });\n  }; // USER PASSWORD ↓↓↓\n\n\n  const _userPassword = {\n    currentPassword: '',\n    newPassword: '',\n    newPasswordConfirmation: ''\n  };\n  const [userPassword, setUserPassword] = useState(_userPassword);\n\n  const handlePasswordChange = e => {\n    setUserPassword({ ...userPassword,\n      [e.target.id]: e.target.value\n    });\n  }; // const handleNewValues = (idInfo, thisInfo) => {\n  //     setInfoEdit(Object.assign(infoEdit, infoEdit$))\n  //     setErrorDatas(Object.assign(errorDatas, errorDatas$))\n  //     setInfoEdit({...infoEdit, [idInfo]: !thisInfo})\n  // }\n  // --------------------------------------------------------\n\n\n  const errorDatas$ = {\n    infosError: false,\n    passwordsError: false\n  };\n  const [errorDatas, setErrorDatas] = useState(errorDatas$); // --------------------------------------------------------\n\n  const userData = [{\n    value: usersPersonalInformation.lastname,\n    id: 'lastname',\n    label: 'Nom',\n    placeholder: '...',\n    maxLength: \"30\"\n  }, {\n    value: usersPersonalInformation.firstname,\n    id: 'firstname',\n    label: 'Prénom',\n    placeholder: '...',\n    maxLength: \"30\"\n  }, {\n    value: usersPersonalInformation.username,\n    id: 'username',\n    label: 'Nom d\\'utilisateur',\n    placeholder: 'ex: pseudo, pseudo46, pseudo-46, pseudo_46 (15 car. max).',\n    maxLength: \"15\"\n  }, {\n    value: usersPersonalInformation.email,\n    id: 'email',\n    label: 'E-mail',\n    placeholder: 'abc@exemple.com',\n    maxLength: \"250\"\n  }];\n  const passwordData = [{\n    value: userPassword.currentPassword,\n    id: 'currentPassword',\n    label: 'Actuel',\n    placeholder: '...',\n    maxLength: \"250\"\n  }, {\n    value: userPassword.newPassword,\n    id: 'newPassword',\n    label: 'Nouveau',\n    placeholder: '6 caract. min, 1 majusc., 1 chiffre et 1 caract. spécial.',\n    maxLength: \"250\"\n  }, {\n    value: userPassword.newPasswordConfirmation,\n    id: 'newPasswordConfirmation',\n    label: 'Confirmation',\n    placeholder: '...',\n    maxLength: \"250\"\n  }]; // ----------------------------PASSWORD CHECKING----------------------------\n\n  const handleSubmitPassword = e => {\n    e.preventDefault(); // if (currentPassword !== '' && newPassword !== '' && newPasswordConfirmation !== '') {\n    //     if (currentPassword) { // if the currentPassword === userPassword\n    //         if (PASSWORD_REGEX.test(newPassword) && newPassword === newPasswordConfirmation) {\n    //             handleModification();\n    //             document.body.scrollTop = document.documentElement.scrollTop = 0\n    //             // handleSuccess()\n    //             updateSuccessAlert();\n    //             console.log('\"' + newPassword + '\" is a new password ✓');\n    //         } else {\n    //             setErrorDatas({...errorDatas, passwordsError: true})\n    //         }\n    //     } else {\n    //         setErrorDatas({...errorDatas, passwordsError: true})\n    //     }\n    // }\n  }; // ----------------------------INFO CHECKING----------------------------\n\n\n  const handleSubmitInfo = e => {\n    e.preventDefault(); // if (data.lastname !== '' && data.firstname !== '' && data.username !== '' && data.email !== '') {\n    //     if (!NAMES_REGEX.test(data.lastname) || !NAMES_REGEX.test(data.firstname) || !USERNAME_REGEX.test(data.username) || !EMAIL_REGEX.test(data.email)) {\n    //         setErrorDatas({...errorDatas, infosError: true})\n    //     }\n    //     else {\n    //         handleNewValues();\n    //         document.body.scrollTop = document.documentElement.scrollTop = 0;\n    //         // handleSuccess()\n    //         updateSuccessAlert();\n    //         console.log(_data);\n    //         console.log('\"' + data.lastname + '\"\\n\"' + data.firstname + '\"\\n\"' + data.username+ '\"\\nis a new infos ✓');\n    //     }\n    // }\n  }; // ALERT ↓↓↓\n\n\n  const [alertMessages, setAlertMessages] = useState([]);\n\n  const handleNewAlert = newAlert => {\n    setAlertMessages(prevState => prevState.slice(1));\n    setAlertMessages(prevState => [...prevState, newAlert]);\n  };\n\n  const updateSuccessAlert = () => {\n    handleNewAlert({\n      variant: \"success\",\n      information: \"Vos informations ont été mis à jour.\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this), alertMessages.map(alert => {\n      return /*#__PURE__*/_jsxDEV(AlertMsg, {\n        variant: alert.variant,\n        information: alert.information\n      }, uuidv4(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"big-info-container centerElementsInPage\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"personal-information\",\n        children: \"Vos informations personelles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-container mb-2\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmitInfo,\n          children: [userData.map(data => {\n            return /*#__PURE__*/_jsxDEV(UserInfoSection, {\n              value: data.value,\n              handlePersonalInformationChange: handlePersonalInformationChange,\n              id: data.id,\n              label: data.label,\n              placeholder: data.placeholder,\n              maxLength: data.maxLength,\n              errorMsg: errorDatas.infosError\n            }, uuidv4(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 33\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"buttons-form-profile\",\n            children: \"Enregistrer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"personal-information\",\n        children: \"Modifier votre mot de passe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleSubmitPassword,\n            children: [passwordData.map(data => {\n              return /*#__PURE__*/_jsxDEV(PasswordSection, {\n                value: data.value,\n                handlePasswordChange: handlePasswordChange,\n                id: data.id,\n                label: data.label,\n                placeholder: data.placeholder,\n                maxLength: data.maxLength,\n                errorMsg: errorDatas.passwordsError\n              }, uuidv4(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 37\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"buttons-form-profile\",\n              children: \"Enregistrer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Profile, \"EWlEAaKBiG2r9T8hZ3j6yhl3kpQ=\");\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/gadacha/Bureau/matcha/src/components/Profile/Profile.js"],"names":["React","useState","useEffect","Fragment","Navbar","UserInfoSection","PasswordSection","AlertMsg","NAMES_REGEX","USERNAME_REGEX","EMAIL_REGEX","PASSWORD_REGEX","v4","uuidv4","Alert","Form","RiUser3Fill","AiOutlineCheck","Profile","document","title","_usersPersonalInformation","lastname","firstname","username","email","usersPersonalInformation","setUsersPersonalInformation","handlePersonalInformationChange","e","target","id","value","_userPassword","currentPassword","newPassword","newPasswordConfirmation","userPassword","setUserPassword","handlePasswordChange","errorDatas$","infosError","passwordsError","errorDatas","setErrorDatas","userData","label","placeholder","maxLength","passwordData","handleSubmitPassword","preventDefault","handleSubmitInfo","alertMessages","setAlertMessages","handleNewAlert","newAlert","prevState","slice","updateSuccessAlert","variant","information","map","alert","data"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport Navbar from '../NavBar/NavBar';\nimport UserInfoSection from './UserInfoSection'\nimport PasswordSection from './PasswordSection'\nimport AlertMsg from '../AlertMsg/AlertMsg';\nimport { NAMES_REGEX, USERNAME_REGEX, EMAIL_REGEX, PASSWORD_REGEX } from '../../other/Regex';\nimport { v4 as uuidv4 } from 'uuid';\nimport Alert from 'react-bootstrap/Alert'\nimport Form from 'react-bootstrap/Form'\nimport { RiUser3Fill } from 'react-icons/ri';\nimport { AiOutlineCheck } from 'react-icons/ai';\n\n\n\nconst Profile = () => {\n\n    useEffect( () => {\n        document.title = 'Profil - Matcha'\n    }, [])\n\n// --------------------------------------------------------\n\n    /* modification of user information */\n    // const infoEdit$ = {\n    //     lastname: false,\n    //     firstname: false,\n    //     username: false,\n    //     email: false,\n    //     password: false\n    // }\n\n    // const [infoEdit, setInfoEdit] = useState(infoEdit$)\n\n    // const handleModification = (idInfo, thisInfo) => {\n\n    //     setInfoEdit(Object.assign(infoEdit, infoEdit$))\n    //     setData(Object.assign(data, _data)) // /!\\  À revoir. Lors de l'enregistrement de la nouvelle info puis le click sur 'annuler' ou 'modifier' l'info revient à l'origine.\n    //     setErrorDatas(Object.assign(errorDatas, errorDatas$))\n    //     setInfoEdit({...infoEdit, [idInfo]: !thisInfo})\n    // }\n\n// --------------------------------------------------------\n\n    // USER'S PERSONAL INFORMATION ↓↓↓\n    const _usersPersonalInformation = {\n        lastname: 'Gadacha',\n        firstname: 'Honsse',\n        username: 'Username93',\n        email: 'test@gmail.com'\n    }\n\n    const [usersPersonalInformation, setUsersPersonalInformation] = useState(_usersPersonalInformation);\n    \n    const handlePersonalInformationChange = e => {\n        setUsersPersonalInformation({...usersPersonalInformation, [e.target.id]: e.target.value});\n    }\n\n\n    // USER PASSWORD ↓↓↓\n    const _userPassword = {\n        currentPassword: '',\n        newPassword: '',\n        newPasswordConfirmation: ''\n    }\n\n    const [userPassword, setUserPassword] = useState(_userPassword);\n    \n    const handlePasswordChange = e => {\n        setUserPassword({...userPassword, [e.target.id]: e.target.value});\n    }\n\n\n\n    // const handleNewValues = (idInfo, thisInfo) => {\n    //     setInfoEdit(Object.assign(infoEdit, infoEdit$))\n    //     setErrorDatas(Object.assign(errorDatas, errorDatas$))\n    //     setInfoEdit({...infoEdit, [idInfo]: !thisInfo})\n    // }\n\n// --------------------------------------------------------\n    \n    const errorDatas$ = {\n            infosError: false,\n            passwordsError: false\n    }\n\n    const [errorDatas, setErrorDatas] = useState(errorDatas$)\n\n// --------------------------------------------------------\n\n    const userData = [\n        {\n            value: usersPersonalInformation.lastname,\n            id: 'lastname',\n            label: 'Nom',\n            placeholder: '...',\n            maxLength: \"30\"\n        },\n        {\n            value: usersPersonalInformation.firstname,\n            id: 'firstname',\n            label: 'Prénom',\n            placeholder: '...',\n            maxLength: \"30\"\n        },\n        {\n            value: usersPersonalInformation.username,\n            id: 'username',\n            label: 'Nom d\\'utilisateur',\n            placeholder: 'ex: pseudo, pseudo46, pseudo-46, pseudo_46 (15 car. max).',\n            maxLength: \"15\"\n        },\n        {\n            value: usersPersonalInformation.email,\n            id: 'email',\n            label: 'E-mail',\n            placeholder: 'abc@exemple.com',\n            maxLength: \"250\"\n        }\n    ]\n\n    const passwordData = [\n        {\n            value: userPassword.currentPassword,\n            id: 'currentPassword',\n            label: 'Actuel',\n            placeholder: '...',\n            maxLength: \"250\"\n        },\n        {\n            value: userPassword.newPassword,\n            id: 'newPassword',\n            label: 'Nouveau',\n            placeholder: '6 caract. min, 1 majusc., 1 chiffre et 1 caract. spécial.',\n            maxLength: \"250\"\n        },\n        {\n            value: userPassword.newPasswordConfirmation,\n            id: 'newPasswordConfirmation',\n            label: 'Confirmation',\n            placeholder: '...',\n            maxLength: \"250\"\n        }\n    ]\n\n// ----------------------------PASSWORD CHECKING----------------------------\n\n    const handleSubmitPassword = e => {\n        e.preventDefault();\n\n        // if (currentPassword !== '' && newPassword !== '' && newPasswordConfirmation !== '') {\n        //     if (currentPassword) { // if the currentPassword === userPassword\n        //         if (PASSWORD_REGEX.test(newPassword) && newPassword === newPasswordConfirmation) {\n        //             handleModification();\n        //             document.body.scrollTop = document.documentElement.scrollTop = 0\n        //             // handleSuccess()\n        //             updateSuccessAlert();\n        //             console.log('\"' + newPassword + '\" is a new password ✓');\n\n        //         } else {\n        //             setErrorDatas({...errorDatas, passwordsError: true})\n        //         }\n        //     } else {\n        //         setErrorDatas({...errorDatas, passwordsError: true})\n        //     }\n        // }\n    }\n\n// ----------------------------INFO CHECKING----------------------------\n\nconst handleSubmitInfo = e => {\n    e.preventDefault();\n\n    // if (data.lastname !== '' && data.firstname !== '' && data.username !== '' && data.email !== '') {\n    //     if (!NAMES_REGEX.test(data.lastname) || !NAMES_REGEX.test(data.firstname) || !USERNAME_REGEX.test(data.username) || !EMAIL_REGEX.test(data.email)) {\n    //         setErrorDatas({...errorDatas, infosError: true})\n    //     }\n    //     else {\n    //         handleNewValues();\n    //         document.body.scrollTop = document.documentElement.scrollTop = 0;\n    //         // handleSuccess()\n    //         updateSuccessAlert();\n    //         console.log(_data);\n    //         console.log('\"' + data.lastname + '\"\\n\"' + data.firstname + '\"\\n\"' + data.username+ '\"\\nis a new infos ✓');\n    //     }\n    // }\n}\n\n\n    // ALERT ↓↓↓\n    const [alertMessages, setAlertMessages] = useState([])\n\n\n    const handleNewAlert = (newAlert) => {\n\n        setAlertMessages(prevState => prevState.slice(1));\n        setAlertMessages(prevState => [...prevState, newAlert]);\n    }\n\n    const updateSuccessAlert = () => {\n        handleNewAlert({variant: \"success\",\n                        information: \"Vos informations ont été mis à jour.\"})\n    }\n\n\n\n    return (\n        <Fragment>\n            <Navbar />\n            {alertMessages.map( alert => {\n                return (\n                    <AlertMsg\n                        key={uuidv4()}\n                        variant={alert.variant}\n                        information={alert.information}\n                    />\n                )\n            })}\n            <div className='big-info-container centerElementsInPage'>\n                <h2 className='personal-information'>Vos informations personelles</h2>\n                <div className='info-container mb-2'>\n                    <Form onSubmit={handleSubmitInfo}>\n                        { userData.map( data => {\n                            return (\n                                <UserInfoSection\n                                    key={uuidv4()}\n                                    value={data.value}\n                                    handlePersonalInformationChange={handlePersonalInformationChange}\n                                    id={data.id}\n                                    label={data.label}\n                                    placeholder={data.placeholder}\n                                    maxLength={data.maxLength}\n                                    errorMsg={errorDatas.infosError}\n                                />\n                            )\n                          })\n                        }\n                        <button type='submit' className='buttons-form-profile'>\n                            Enregistrer\n                        </button>\n                    </Form>\n                </div>\n                <h2 className='personal-information'>Modifier votre mot de passe</h2>\n                    <div className='info-container'>\n                        <div>\n                            <Form onSubmit={handleSubmitPassword}>\n                            { passwordData.map( data => {\n                                return (\n                                    <PasswordSection\n                                        key={uuidv4()}\n                                        value={data.value}\n                                        handlePasswordChange={handlePasswordChange}\n                                        id={data.id}\n                                        label={data.label}\n                                        placeholder={data.placeholder}\n                                        maxLength={data.maxLength}\n                                        errorMsg={errorDatas.passwordsError}\n                                    />\n                                )\n                                })\n                            }\n                                <button type='submit' className='buttons-form-profile'>\n                                    Enregistrer\n                                </button>\n                            </Form>\n                        </div>\n                    </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default Profile"]},"metadata":{},"sourceType":"module"}