{"ast":null,"code":"var _jsxFileName = \"/home/gadacha/Bureau/matcha/src/components/AlertMsg/AlertMsg.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Alert from 'react-bootstrap/Alert';\nimport { AiFillWarning, AiFillCheckCircle } from 'react-icons/ai';\nimport { RiInformationFill } from 'react-icons/ri';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AlertMsg = ({\n  variant,\n  information\n}) => {\n  _s();\n\n  function Icon() {\n    if (variant === 'success') {\n      return /*#__PURE__*/_jsxDEV(AiFillCheckCircle, {\n        className: \"mr-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 20\n      }, this);\n    } else if (variant === 'secondary') {\n      return /*#__PURE__*/_jsxDEV(RiInformationFill, {\n        className: \"mr-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 20\n      }, this);\n    } else if (variant === 'danger') {\n      return /*#__PURE__*/_jsxDEV(AiFillWarning, {\n        className: \"mr-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 20\n      }, this);\n    } else return null;\n  }\n\n  const [displayAlert] = useState(false);\n  useEffect(() => {\n    const countDown = setTimeout(() => {}, 4000);\n\n    if (variant) {}\n  });\n  return /*#__PURE__*/_jsxDEV(Alert, {\n    variant: variant,\n    id: \"alert\",\n    className: \"alert-msg\",\n    children: [/*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), information]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 13\n  }, this);\n};\n\n_s(AlertMsg, \"Ri3UtT1TCV7VaXaUA5d21sTWQ9g=\");\n\n_c = AlertMsg;\nexport default AlertMsg;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlertMsg\");","map":{"version":3,"sources":["/home/gadacha/Bureau/matcha/src/components/AlertMsg/AlertMsg.js"],"names":["React","useEffect","useState","Alert","AiFillWarning","AiFillCheckCircle","RiInformationFill","AlertMsg","variant","information","Icon","displayAlert","countDown","setTimeout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,SAASC,aAAT,EAAwBC,iBAAxB,QAAiD,gBAAjD;AACA,SAASC,iBAAT,QAAkC,gBAAlC;;;AAMA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,CAAD,KAA4B;AAAA;;AAEzC,WAASC,IAAT,GAAgB;AACZ,QAAIF,OAAO,KAAK,SAAhB,EAA2B;AACvB,0BAAO,QAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,MAGK,IAAIA,OAAO,KAAK,WAAhB,EAA6B;AAC9B,0BAAO,QAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFI,MAGA,IAAIA,OAAO,KAAK,QAAhB,EAA0B;AAC3B,0BAAO,QAAC,aAAD;AAAe,QAAA,SAAS,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFI,MAID,OAAO,IAAP;AACP;;AAED,QAAM,CAACG,YAAD,IAAiBT,QAAQ,CAAC,KAAD,CAA/B;AAEAD,EAAAA,SAAS,CAAE,MAAM;AAEb,UAAMW,SAAS,GAAGC,UAAU,CAAE,MAAM,CAEnC,CAF2B,EAExB,IAFwB,CAA5B;;AAIA,QAAIL,OAAJ,EAAa,CAEZ;AACJ,GATQ,CAAT;AAYA,sBACQ,QAAC,KAAD;AAAO,IAAA,OAAO,EAAEA,OAAhB;AAAyB,IAAA,EAAE,EAAC,OAA5B;AAAoC,IAAA,SAAS,EAAC,WAA9C;AAAA,4BACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKC,WAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAMH,CApCD;;GAAMF,Q;;KAAAA,Q;AAsCN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Alert from 'react-bootstrap/Alert'\nimport { AiFillWarning, AiFillCheckCircle } from 'react-icons/ai';\nimport { RiInformationFill } from 'react-icons/ri';\n\n\n\n\n\nconst AlertMsg = ({variant, information}) => {\n\n    function Icon() {\n        if (variant === 'success') {\n            return <AiFillCheckCircle className='mr-1' />\n        }\n        else if (variant === 'secondary') {\n            return <RiInformationFill className='mr-1' />\n        }\n        else if (variant === 'danger') {\n            return <AiFillWarning className='mr-1' />\n        }\n        else\n            return null\n    }\n\n    const [displayAlert] = useState(false)\n\n    useEffect( () => {\n\n        const countDown = setTimeout( () => {\n            \n        } , 4000)\n\n        if (variant) {\n            \n        }\n    })\n\n\n    return (\n            <Alert variant={variant} id='alert' className='alert-msg'>\n                <Icon/>\n                {information}\n            </Alert>       \n    )\n}\n\nexport default AlertMsg"]},"metadata":{},"sourceType":"module"}