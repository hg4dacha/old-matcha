{"ast":null,"code":"var _jsxFileName = \"/home/gadacha/Bureau/matcha/src/components/AlertMsg/AlertMsg.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Alert from 'react-bootstrap/Alert';\nimport { AiFillWarning, AiFillCheckCircle } from 'react-icons/ai';\nimport { RiInformationFill } from 'react-icons/ri';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AlertMsg = ({\n  variant,\n  information,\n  setAlertMessages,\n  alertMessages\n}) => {\n  _s();\n\n  function Icon() {\n    if (variant === 'success') {\n      return /*#__PURE__*/_jsxDEV(AiFillCheckCircle, {\n        className: \"mr-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 20\n      }, this);\n    } else if (variant === 'secondary') {\n      return /*#__PURE__*/_jsxDEV(RiInformationFill, {\n        className: \"mr-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 20\n      }, this);\n    } else if (variant === 'danger') {\n      return /*#__PURE__*/_jsxDEV(AiFillWarning, {\n        className: \"mr-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 20\n      }, this);\n    } else return null;\n  }\n\n  const [show, setShow] = useState(true);\n  useEffect(() => {\n    let countDown = setTimeout(() => {\n      setShow(false);\n    }, 6000);\n    return () => {\n      clearTimeout(countDown); // setAlertMessages(alertMessages.slice(1))\n    };\n  }, [setAlertMessages, alertMessages]);\n  return /*#__PURE__*/_jsxDEV(Alert, {\n    variant: variant,\n    show: show,\n    transition: null,\n    id: \"alert\",\n    className: \"alert-msg\",\n    children: [/*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), information]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 13\n  }, this);\n};\n\n_s(AlertMsg, \"7rrxj0wE5iz58YydTDN/pg4Izes=\");\n\n_c = AlertMsg;\nexport default AlertMsg;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlertMsg\");","map":{"version":3,"sources":["/home/gadacha/Bureau/matcha/src/components/AlertMsg/AlertMsg.js"],"names":["React","useEffect","useState","Alert","AiFillWarning","AiFillCheckCircle","RiInformationFill","AlertMsg","variant","information","setAlertMessages","alertMessages","Icon","show","setShow","countDown","setTimeout","clearTimeout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,SAASC,aAAT,EAAwBC,iBAAxB,QAAiD,gBAAjD;AACA,SAASC,iBAAT,QAAkC,gBAAlC;;;AAMA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA,WAAV;AAAuBC,EAAAA,gBAAvB;AAAyCC,EAAAA;AAAzC,CAAD,KAA6D;AAAA;;AAE1E,WAASC,IAAT,GAAgB;AACZ,QAAIJ,OAAO,KAAK,SAAhB,EAA2B;AACvB,0BAAO,QAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,MAGK,IAAIA,OAAO,KAAK,WAAhB,EAA6B;AAC9B,0BAAO,QAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFI,MAGA,IAAIA,OAAO,KAAK,QAAhB,EAA0B;AAC3B,0BAAO,QAAC,aAAD;AAAe,QAAA,SAAS,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFI,MAID,OAAO,IAAP;AACP;;AAED,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,IAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAE,MAAM;AAEb,QAAIc,SAAS,GAAGC,UAAU,CAAE,MAAM;AAC9BF,MAAAA,OAAO,CAAC,KAAD,CAAP;AACH,KAFyB,EAEtB,IAFsB,CAA1B;AAIA,WAAO,MAAM;AACTG,MAAAA,YAAY,CAACF,SAAD,CAAZ,CADS,CAET;AACH,KAHD;AAKH,GAXQ,EAWN,CAACL,gBAAD,EAAmBC,aAAnB,CAXM,CAAT;AAcA,sBACQ,QAAC,KAAD;AAAO,IAAA,OAAO,EAAEH,OAAhB;AAAyB,IAAA,IAAI,EAAEK,IAA/B;AAAqC,IAAA,UAAU,EAAE,IAAjD;AAAuD,IAAA,EAAE,EAAC,OAA1D;AAAkE,IAAA,SAAS,EAAC,WAA5E;AAAA,4BACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKJ,WAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAMH,CAtCD;;GAAMF,Q;;KAAAA,Q;AAwCN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Alert from 'react-bootstrap/Alert'\nimport { AiFillWarning, AiFillCheckCircle } from 'react-icons/ai';\nimport { RiInformationFill } from 'react-icons/ri';\n\n\n\n\n\nconst AlertMsg = ({variant, information, setAlertMessages, alertMessages}) => {\n\n    function Icon() {\n        if (variant === 'success') {\n            return <AiFillCheckCircle className='mr-1' />\n        }\n        else if (variant === 'secondary') {\n            return <RiInformationFill className='mr-1' />\n        }\n        else if (variant === 'danger') {\n            return <AiFillWarning className='mr-1' />\n        }\n        else\n            return null\n    }\n\n    const [show, setShow] = useState(true)\n\n    useEffect( () => {\n\n        let countDown = setTimeout( () => {\n            setShow(false)\n        } , 6000)\n\n        return () => {\n            clearTimeout(countDown)\n            // setAlertMessages(alertMessages.slice(1))\n        }\n\n    }, [setAlertMessages, alertMessages])\n\n\n    return (\n            <Alert variant={variant} show={show} transition={null} id='alert' className='alert-msg'>\n                <Icon/>\n                {information}\n            </Alert>\n    )\n}\n\nexport default AlertMsg"]},"metadata":{},"sourceType":"module"}