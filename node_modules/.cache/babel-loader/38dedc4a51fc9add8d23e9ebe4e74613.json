{"ast":null,"code":"var _jsxFileName = \"/home/gadacha/Bureau/matcha/src/components/Profile/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Fragment } from 'react';\nimport Navbar from '../NavBar/NavBar';\nimport UserInfoSection from './UserInfoSection';\nimport PasswordSection from './PasswordSection';\nimport AlertMsg from '../AlertMsg/AlertMsg';\nimport { NAMES_REGEX, USERNAME_REGEX, EMAIL_REGEX, PASSWORD_REGEX } from '../../other/Regex';\nimport { v4 as uuidv4 } from 'uuid';\nimport Alert from 'react-bootstrap/Alert';\nimport Form from 'react-bootstrap/Form';\nimport { RiUser3Fill } from 'react-icons/ri';\nimport { AiOutlineCheck } from 'react-icons/ai';\nimport { RiErrorWarningLine } from 'react-icons/ri';\nimport { GiTrumpet } from 'react-icons/gi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = () => {\n  _s();\n\n  useEffect(() => {\n    document.title = 'Profil - Matcha';\n  }, []); // --------------------------------------------------------\n  // _-_-_-_-_-_-_-_-_- USER PERSONAL INFORMATION SECTION -_-_-_-_-_-_-_-_-_\n  // USER'S PERSONAL INFORMATION ↓↓↓\n\n  const _usersPersonalInformation = {\n    lastname: 'Gadacha',\n    firstname: 'Honsse',\n    username: 'Username93',\n    email: 'test@gmail.com'\n  };\n  const [usersPersonalInformation, setUsersPersonalInformation] = useState(_usersPersonalInformation);\n\n  const handlePersonalInformationChange = e => {\n    setUsersPersonalInformation({ ...usersPersonalInformation,\n      [e.target.id]: e.target.value\n    });\n  }; // INCORRECT DATA ↓↓↓\n\n\n  const [infoDataError, setInfoDataError] = useState(false); // ON SUBMIT NEW INFORMATION ↓↓↓\n\n  const handleSubmitUpdatedInformation = e => {\n    e.preventDefault();\n\n    if (usersPersonalInformation.lastname !== '' && usersPersonalInformation.firstname !== '' && usersPersonalInformation.username !== '' && usersPersonalInformation.email !== '') {\n      if (!NAMES_REGEX.test(usersPersonalInformation.lastname) || !NAMES_REGEX.test(usersPersonalInformation.firstname) || !USERNAME_REGEX.test(usersPersonalInformation.username) || !EMAIL_REGEX.test(usersPersonalInformation.email)) {\n        setInfoDataError(true);\n      } else {\n        setInfoDataError(false);\n        updateSuccessAlert(); // document.body.scrollTop = document.documentElement.scrollTop = 0;\n        // console.log(_usersPersonalInformation);\n        // console.log('\"' + usersPersonalInformation.lastname + '\"\\n\"' + usersPersonalInformation.firstname + '\"\\n\"' + usersPersonalInformation.username+ '\"\\nis a new infos ✓');\n      }\n    }\n  }; // _-_-_-_-_-_-_-_-_- USER PERSONAL INFORMATION SECTION -_-_-_-_-_-_-_-_-_\n  // USER PASSWORD ↓↓↓\n\n\n  const _userPassword = {\n    currentPassword: '',\n    newPassword: '',\n    newPasswordConfirmation: ''\n  };\n  const [userPassword, setUserPassword] = useState(_userPassword);\n\n  const handlePasswordChange = e => {\n    setUserPassword({ ...userPassword,\n      [e.target.id]: e.target.value\n    });\n  }; // INCORRECT DATA ↓↓↓\n\n\n  const [passwordDataError, setPasswordDataError] = useState(false); // ON SUBMIT NEW PASSWORD ↓↓↓\n\n  const handleSubmitPassword = e => {\n    e.preventDefault();\n\n    if (userPassword.currentPassword !== '' && userPassword.newPassword !== '' && userPassword.newPasswordConfirmation !== '') {\n      if (userPassword.currentPassword) // if the currentPassword === userPassword\n        {\n          if (PASSWORD_REGEX.test(userPassword.newPassword) && userPassword.newPassword === userPassword.newPasswordConfirmation) {\n            setPasswordDataError(false);\n            updateSuccessAlert(); // document.body.scrollTop = document.documentElement.scrollTop = 0\n            // console.log('\"' + newPassword + '\" is a new password ✓');\n          } else {\n            setPasswordDataError(true);\n          }\n        } else {\n        setPasswordDataError(true);\n      }\n    }\n  }; // _-_-_-_-_-_-_-_-_- SECTION DATA -_-_-_-_-_-_-_-_-_\n\n\n  const infoData = [{\n    value: usersPersonalInformation.lastname,\n    id: 'lastname',\n    label: 'Nom',\n    placeholder: '...',\n    maxLength: \"30\"\n  }, {\n    value: usersPersonalInformation.firstname,\n    id: 'firstname',\n    label: 'Prénom',\n    placeholder: '...',\n    maxLength: \"30\"\n  }, {\n    value: usersPersonalInformation.username,\n    id: 'username',\n    label: 'Nom d\\'utilisateur',\n    placeholder: 'ex: pseudo, pseudo46, pseudo-46, pseudo_46 (15 car. max).',\n    maxLength: \"15\"\n  }, {\n    value: usersPersonalInformation.email,\n    id: 'email',\n    label: 'E-mail',\n    placeholder: 'abc@exemple.com',\n    maxLength: \"250\"\n  }];\n  const passwordData = [{\n    value: userPassword.currentPassword,\n    id: 'currentPassword',\n    label: 'Actuel',\n    placeholder: '...',\n    maxLength: \"250\"\n  }, {\n    value: userPassword.newPassword,\n    id: 'newPassword',\n    label: 'Nouveau',\n    placeholder: '6 caract. min, 1 majusc., 1 chiffre et 1 caract. spécial.',\n    maxLength: \"250\"\n  }, {\n    value: userPassword.newPasswordConfirmation,\n    id: 'newPasswordConfirmation',\n    label: 'Confirmation',\n    placeholder: '...',\n    maxLength: \"250\"\n  }];\n  /* modification of user information */\n  // const infoEdit$ = {\n  //     lastname: false,\n  //     firstname: false,\n  //     username: false,\n  //     email: false,\n  //     password: false\n  // }\n  // const [infoEdit, setInfoEdit] = useState(infoEdit$)\n  // const handleModification = (idInfo, thisInfo) => {\n  //     setInfoEdit(Object.assign(infoEdit, infoEdit$))\n  //     setData(Object.assign(data, _data)) // /!\\  À revoir. Lors de l'enregistrement de la nouvelle info puis le click sur 'annuler' ou 'modifier' l'info revient à l'origine.\n  //     setErrorDatas(Object.assign(errorDatas, errorDatas$))\n  //     setInfoEdit({...infoEdit, [idInfo]: !thisInfo})\n  // }\n  // const handleNewValues = (idInfo, thisInfo) => {\n  //     setInfoEdit(Object.assign(infoEdit, infoEdit$))\n  //     setErrorDatas(Object.assign(errorDatas, errorDatas$))\n  //     setInfoEdit({...infoEdit, [idInfo]: !thisInfo})\n  // }\n  // --------------------------------------------------------\n  // --------------------------------------------------------\n  // ALERT ↓↓↓\n\n  const [alertMessages, setAlertMessages] = useState([]);\n\n  const handleNewAlert = newAlert => {\n    setAlertMessages(prevState => prevState.slice(1));\n    setAlertMessages(prevState => [...prevState, newAlert]);\n  };\n\n  const updateSuccessAlert = () => {\n    handleNewAlert({\n      id: uuidv4(),\n      variant: \"success\",\n      information: \"Les données ont été mises à jour.\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }, this), alertMessages.map((alert, index) => {\n      return /*#__PURE__*/_jsxDEV(AlertMsg, {\n        variant: alert.variant,\n        information: alert.information\n      }, alert.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"big-info-container centerElementsInPage\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"personal-information\",\n        children: \"Vos informations personelles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-container mb-2\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmitUpdatedInformation,\n          children: [infoData.map(data => {\n            return /*#__PURE__*/_jsxDEV(UserInfoSection, {\n              value: data.value,\n              handlePersonalInformationChange: handlePersonalInformationChange,\n              id: data.id,\n              label: data.label,\n              placeholder: data.placeholder,\n              maxLength: data.maxLength\n            }, data.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 33\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"buttons-form-profile\",\n            children: \"Enregistrer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 25\n          }, this), infoDataError && /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"error-update-profile\",\n            children: [/*#__PURE__*/_jsxDEV(RiErrorWarningLine, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 29\n            }, this), \"L'entr\\xE9e n'est pas valide\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"personal-information\",\n        children: \"Modifier votre mot de passe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-container\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmitPassword,\n          children: [passwordData.map(data => {\n            return /*#__PURE__*/_jsxDEV(PasswordSection, {\n              value: data.value,\n              handlePasswordChange: handlePasswordChange,\n              id: data.id,\n              label: data.label,\n              placeholder: data.placeholder,\n              maxLength: data.maxLength\n            }, data.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 33\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"buttons-form-profile\",\n            children: \"Enregistrer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 25\n          }, this), passwordDataError && /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"error-update-profile\",\n            children: [/*#__PURE__*/_jsxDEV(RiErrorWarningLine, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 29\n            }, this), \"L'entr\\xE9e n'est pas valide\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Profile, \"gsSEUz2NzqvSYLZGl5nsb3CZsCI=\");\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/gadacha/Bureau/matcha/src/components/Profile/Profile.js"],"names":["React","useState","useEffect","Fragment","Navbar","UserInfoSection","PasswordSection","AlertMsg","NAMES_REGEX","USERNAME_REGEX","EMAIL_REGEX","PASSWORD_REGEX","v4","uuidv4","Alert","Form","RiUser3Fill","AiOutlineCheck","RiErrorWarningLine","GiTrumpet","Profile","document","title","_usersPersonalInformation","lastname","firstname","username","email","usersPersonalInformation","setUsersPersonalInformation","handlePersonalInformationChange","e","target","id","value","infoDataError","setInfoDataError","handleSubmitUpdatedInformation","preventDefault","test","updateSuccessAlert","_userPassword","currentPassword","newPassword","newPasswordConfirmation","userPassword","setUserPassword","handlePasswordChange","passwordDataError","setPasswordDataError","handleSubmitPassword","infoData","label","placeholder","maxLength","passwordData","alertMessages","setAlertMessages","handleNewAlert","newAlert","prevState","slice","variant","information","map","alert","index","data"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport Navbar from '../NavBar/NavBar';\nimport UserInfoSection from './UserInfoSection'\nimport PasswordSection from './PasswordSection'\nimport AlertMsg from '../AlertMsg/AlertMsg';\nimport { NAMES_REGEX, USERNAME_REGEX, EMAIL_REGEX, PASSWORD_REGEX } from '../../other/Regex';\nimport { v4 as uuidv4 } from 'uuid';\nimport Alert from 'react-bootstrap/Alert'\nimport Form from 'react-bootstrap/Form'\nimport { RiUser3Fill } from 'react-icons/ri';\nimport { AiOutlineCheck } from 'react-icons/ai';\n\nimport { RiErrorWarningLine } from 'react-icons/ri';\nimport { GiTrumpet } from 'react-icons/gi';\n\n\nconst Profile = () => {\n\n    useEffect( () => {\n        document.title = 'Profil - Matcha'\n    }, [])\n\n// --------------------------------------------------------\n\n\n\n// _-_-_-_-_-_-_-_-_- USER PERSONAL INFORMATION SECTION -_-_-_-_-_-_-_-_-_\n\n\n    // USER'S PERSONAL INFORMATION ↓↓↓\n    const _usersPersonalInformation = {\n        lastname: 'Gadacha',\n        firstname: 'Honsse',\n        username: 'Username93',\n        email: 'test@gmail.com'\n    }\n\n    const [usersPersonalInformation, setUsersPersonalInformation] = useState(_usersPersonalInformation);\n\n    const handlePersonalInformationChange = e => {\n        setUsersPersonalInformation({...usersPersonalInformation, [e.target.id]: e.target.value});\n    }\n\n\n    // INCORRECT DATA ↓↓↓\n    const [infoDataError, setInfoDataError] = useState(false)\n\n\n    // ON SUBMIT NEW INFORMATION ↓↓↓\n\n    const handleSubmitUpdatedInformation = e => {\n        e.preventDefault();\n\n        if (usersPersonalInformation.lastname !== '' && usersPersonalInformation.firstname !== '' &&\n            usersPersonalInformation.username !== '' && usersPersonalInformation.email !== '')\n        {\n            if (!NAMES_REGEX.test(usersPersonalInformation.lastname) || !NAMES_REGEX.test(usersPersonalInformation.firstname) ||\n                !USERNAME_REGEX.test(usersPersonalInformation.username) || !EMAIL_REGEX.test(usersPersonalInformation.email))\n            {\n                setInfoDataError(true);\n            }\n            else\n            {\n                setInfoDataError(false);\n                updateSuccessAlert();\n                // document.body.scrollTop = document.documentElement.scrollTop = 0;\n                // console.log(_usersPersonalInformation);\n                // console.log('\"' + usersPersonalInformation.lastname + '\"\\n\"' + usersPersonalInformation.firstname + '\"\\n\"' + usersPersonalInformation.username+ '\"\\nis a new infos ✓');\n            }\n        }\n    }\n\n\n\n\n\n// _-_-_-_-_-_-_-_-_- USER PERSONAL INFORMATION SECTION -_-_-_-_-_-_-_-_-_\n\n\n    // USER PASSWORD ↓↓↓\n    const _userPassword = {\n        currentPassword: '',\n        newPassword: '',\n        newPasswordConfirmation: ''\n    }\n\n    const [userPassword, setUserPassword] = useState(_userPassword);\n    \n    const handlePasswordChange = e => {\n        setUserPassword({...userPassword, [e.target.id]: e.target.value});\n    }\n\n\n    // INCORRECT DATA ↓↓↓\n    const [passwordDataError, setPasswordDataError] = useState(false)\n\n\n    // ON SUBMIT NEW PASSWORD ↓↓↓\n    const handleSubmitPassword = e => {\n        e.preventDefault();\n\n        if (userPassword.currentPassword !== '' && userPassword.newPassword !== ''&& userPassword.newPasswordConfirmation !== '')\n        {\n            if (userPassword.currentPassword)// if the currentPassword === userPassword\n            {\n                if (PASSWORD_REGEX.test(userPassword.newPassword) && userPassword.newPassword === userPassword.newPasswordConfirmation)\n                {\n                    setPasswordDataError(false)\n                    updateSuccessAlert();\n                    // document.body.scrollTop = document.documentElement.scrollTop = 0\n                    // console.log('\"' + newPassword + '\" is a new password ✓');\n\n                } else\n                {\n                    setPasswordDataError(true)\n                }\n            } else\n            {\n                setPasswordDataError(true)\n            }\n        }\n    }\n\n\n\n\n\n// _-_-_-_-_-_-_-_-_- SECTION DATA -_-_-_-_-_-_-_-_-_\n\n\n    const infoData = [\n        {\n            value: usersPersonalInformation.lastname,\n            id: 'lastname',\n            label: 'Nom',\n            placeholder: '...',\n            maxLength: \"30\"\n        },\n        {\n            value: usersPersonalInformation.firstname,\n            id: 'firstname',\n            label: 'Prénom',\n            placeholder: '...',\n            maxLength: \"30\"\n        },\n        {\n            value: usersPersonalInformation.username,\n            id: 'username',\n            label: 'Nom d\\'utilisateur',\n            placeholder: 'ex: pseudo, pseudo46, pseudo-46, pseudo_46 (15 car. max).',\n            maxLength: \"15\"\n        },\n        {\n            value: usersPersonalInformation.email,\n            id: 'email',\n            label: 'E-mail',\n            placeholder: 'abc@exemple.com',\n            maxLength: \"250\"\n        }\n    ]\n\n    const passwordData = [\n        {\n            value: userPassword.currentPassword,\n            id: 'currentPassword',\n            label: 'Actuel',\n            placeholder: '...',\n            maxLength: \"250\"\n        },\n        {\n            value: userPassword.newPassword,\n            id: 'newPassword',\n            label: 'Nouveau',\n            placeholder: '6 caract. min, 1 majusc., 1 chiffre et 1 caract. spécial.',\n            maxLength: \"250\"\n        },\n        {\n            value: userPassword.newPasswordConfirmation,\n            id: 'newPasswordConfirmation',\n            label: 'Confirmation',\n            placeholder: '...',\n            maxLength: \"250\"\n        }\n    ]\n\n\n    /* modification of user information */\n    // const infoEdit$ = {\n    //     lastname: false,\n    //     firstname: false,\n    //     username: false,\n    //     email: false,\n    //     password: false\n    // }\n\n    // const [infoEdit, setInfoEdit] = useState(infoEdit$)\n\n    // const handleModification = (idInfo, thisInfo) => {\n\n    //     setInfoEdit(Object.assign(infoEdit, infoEdit$))\n    //     setData(Object.assign(data, _data)) // /!\\  À revoir. Lors de l'enregistrement de la nouvelle info puis le click sur 'annuler' ou 'modifier' l'info revient à l'origine.\n    //     setErrorDatas(Object.assign(errorDatas, errorDatas$))\n    //     setInfoEdit({...infoEdit, [idInfo]: !thisInfo})\n    // }\n\n\n        // const handleNewValues = (idInfo, thisInfo) => {\n    //     setInfoEdit(Object.assign(infoEdit, infoEdit$))\n    //     setErrorDatas(Object.assign(errorDatas, errorDatas$))\n    //     setInfoEdit({...infoEdit, [idInfo]: !thisInfo})\n    // }\n\n    // --------------------------------------------------------\n\n// --------------------------------------------------------\n\n\n\n    // ALERT ↓↓↓\n    const [alertMessages, setAlertMessages] = useState([])\n\n\n    const handleNewAlert = (newAlert) => {\n\n        setAlertMessages(prevState => prevState.slice(1));\n        setAlertMessages(prevState => [...prevState, newAlert]);\n    }\n\n    const updateSuccessAlert = () => {\n        handleNewAlert({id: uuidv4(),\n                        variant: \"success\",\n                        information: \"Les données ont été mises à jour.\"})\n    }\n\n\n\n    return (\n        <Fragment>\n            <Navbar />\n            {alertMessages.map( (alert, index) => {\n                return (\n                    <AlertMsg\n                        key={alert.id}\n                        variant={alert.variant}\n                        information={alert.information}\n                    />\n                )\n            })}\n            <div className='big-info-container centerElementsInPage'>\n                <h2 className='personal-information'>Vos informations personelles</h2>\n                <div className='info-container mb-2'>\n                    <Form onSubmit={handleSubmitUpdatedInformation}>\n                        { infoData.map( data => {\n                            return (\n                                <UserInfoSection\n                                    key={data.id}\n                                    value={data.value}\n                                    handlePersonalInformationChange={handlePersonalInformationChange}\n                                    id={data.id}\n                                    label={data.label}\n                                    placeholder={data.placeholder}\n                                    maxLength={data.maxLength}\n                                />\n                            )\n                          })\n                        }\n                        <button type='submit' className='buttons-form-profile'>\n                            Enregistrer\n                        </button>\n                        {\n                        infoDataError &&\n                        <Form.Text className='error-update-profile'>\n                            <RiErrorWarningLine/>\n                            L'entrée n'est pas valide\n                        </Form.Text>\n                        }\n                    </Form>\n                </div>\n                <h2 className='personal-information'>Modifier votre mot de passe</h2>\n                <div className='info-container'>\n                    <Form onSubmit={handleSubmitPassword}>\n                        { passwordData.map( data => {\n                            return (\n                                <PasswordSection\n                                    key={data.id}\n                                    value={data.value}\n                                    handlePasswordChange={handlePasswordChange}\n                                    id={data.id}\n                                    label={data.label}\n                                    placeholder={data.placeholder}\n                                    maxLength={data.maxLength}\n                                />\n                            )\n                          })\n                        }\n                        <button type='submit' className='buttons-form-profile'>\n                            Enregistrer\n                        </button>\n                        {\n                        passwordDataError &&\n                        <Form.Text className='error-update-profile'>\n                            <RiErrorWarningLine/>\n                            L'entrée n'est pas valide\n                        </Form.Text>\n                        }\n                    </Form>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\n\nexport default Profile"]},"metadata":{},"sourceType":"module"}