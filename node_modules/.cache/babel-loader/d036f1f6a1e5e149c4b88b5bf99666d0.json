{"ast":null,"code":"var _jsxFileName = \"/home/gadacha/Bureau/matcha/src/components/Profile/PasswordSection.js\";\nimport React, { Fragment } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { IoSettingsOutline } from 'react-icons/io5';\nimport { IoIosArrowForward } from 'react-icons/io';\nimport { RiErrorWarningLine } from 'react-icons/ri';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PasswordSection = props => {\n  // const errorMsg = props.errorMsg ?\n  // <Form.Text className='generalError generalErrorDisplay' id='generalError' style={{top:'0'}}><RiErrorWarningLine style={{marginTop: '-2px', marginRight: '2px'}} />Vos entrées ne sont pas valides</Form.Text> :\n  // <Form.Text className='generalError' id='generalError' style={{top:'0'}}><RiErrorWarningLine style={{marginTop: '-2px', marginRight: '2px'}} />Vos entrées ne sont pas valides</Form.Text> ;\n  // const passwordData = !props.passwordEdit ?\n  //     <div className='info-rows'>\n  //         <div className='label-and-info'>\n  //             <span className='info-label'>Mot de passe</span>\n  //             <span className='info-info'>•••••••••••••</span>\n  //         </div>\n  //         <div className='info-links' onClick={() => props.handleModification('password', props.passwordEdit)}>\n  //             <div className='div-links'>\n  //                 <div className='setting-and-arrow'>\n  //                     <IoSettingsOutline className='setting' />\n  //                     <IoIosArrowForward className='arrow' />\n  //                 </div>\n  //             </div>\n  //         </div>\n  //     </div> :\n  //     <Form className='forms-profile' onSubmit={props.handleSubmitPassword}>\n  //     <div className='w-100'>\n  //         <Form.Group controlId=\"currentPassword\" className='form-group-profile'>\n  //                 <Form.Label>Mot de passe actuel</Form.Label>\n  //                 <Form.Control onChange={props.handleChange} type=\"password\" placeholder=\"\" className='form-control-profile' maxLength=\"250\" autoFocus/>\n  //         </Form.Group>\n  //         <Form.Group controlId=\"newPassword\" className='form-group-profile mt-2'>\n  //                 <Form.Label>Nouveau mot de passe</Form.Label>\n  //                 <Form.Control onChange={props.handleChange} type=\"password\" placeholder=\"\" className='form-control-profile' maxLength=\"250\"/>\n  //                 <Form.Text className=\"text-muted\">6 caract. min, 1 majusc., 1 chiffre et 1 caract. spécial.</Form.Text>\n  //         </Form.Group>\n  //         <Form.Group controlId=\"newPasswordConfirmation\" className='form-group-profile mt-2'>\n  //                 <Form.Label>Confirmer le nouveau mot de passe</Form.Label>\n  //                 <Form.Control onChange={props.handleChange} type=\"password\" placeholder=\"\" className='form-control-profile' maxLength=\"250\"/>\n  //         </Form.Group>\n  //         <div style={{position: 'relative'}}>\n  //             {errorMsg}\n  //         </div>\n  //     </div>\n  //     <div className='div-buttons-form-profile'>\n  //         <Button variant=\"primary\" type=\"submit\" className='buttons-form-profile'>Enregistrer</Button>\n  //         <Button variant=\"danger\" type=\"button\" className='buttons-form-profile' onClick={() => props.handleModification('password', props.passwordEdit)}>Annuler</Button>\n  //     </div>\n  //     </Form>;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n      as: Row,\n      className: \"mb-1\",\n      controlId: props.id,\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        column: true,\n        sm: \"2\",\n        children: props.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"10\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: props.value,\n          onChange: props.handlePasswordChange,\n          placeholder: props.placeholder,\n          type: \"password\",\n          autoComplete: \"off\",\n          maxLength: props.maxLength,\n          className: \"form-control-profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_c = PasswordSection;\nexport default PasswordSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordSection\");","map":{"version":3,"sources":["/home/gadacha/Bureau/matcha/src/components/Profile/PasswordSection.js"],"names":["React","Fragment","Form","Button","Row","Col","IoSettingsOutline","IoIosArrowForward","RiErrorWarningLine","PasswordSection","props","id","label","value","handlePasswordChange","placeholder","maxLength"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,SAASC,iBAAT,QAAkC,iBAAlC;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,SAASC,kBAAT,QAAmC,gBAAnC;;;AAMA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAE/B;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,sBACI,QAAC,QAAD;AAAA,2BACI,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAEN,GAAhB;AAAqB,MAAA,SAAS,EAAC,MAA/B;AAAsC,MAAA,SAAS,EAAEM,KAAK,CAACC,EAAvD;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,MAAM,MAAlB;AAAmB,QAAA,EAAE,EAAC,GAAtB;AAAA,kBACKD,KAAK,CAACE;AADX;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAA,+BACI,QAAC,IAAD,CAAM,OAAN;AACI,UAAA,KAAK,EAAEF,KAAK,CAACG,KADjB;AAEI,UAAA,QAAQ,EAAEH,KAAK,CAACI,oBAFpB;AAGI,UAAA,WAAW,EAAEJ,KAAK,CAACK,WAHvB;AAII,UAAA,IAAI,EAAC,UAJT;AAKI,UAAA,YAAY,EAAC,KALjB;AAMI,UAAA,SAAS,EAAEL,KAAK,CAACM,SANrB;AAOI,UAAA,SAAS,EAAC;AAPd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CApED;;KAAMP,e;AAsEN,eAAeA,eAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport { Form, Button } from 'react-bootstrap'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport { IoSettingsOutline } from 'react-icons/io5';\nimport { IoIosArrowForward } from 'react-icons/io';\nimport { RiErrorWarningLine } from 'react-icons/ri';\n\n\n\n\n\nconst PasswordSection = (props) => {\n\n    // const errorMsg = props.errorMsg ?\n    // <Form.Text className='generalError generalErrorDisplay' id='generalError' style={{top:'0'}}><RiErrorWarningLine style={{marginTop: '-2px', marginRight: '2px'}} />Vos entrées ne sont pas valides</Form.Text> :\n    // <Form.Text className='generalError' id='generalError' style={{top:'0'}}><RiErrorWarningLine style={{marginTop: '-2px', marginRight: '2px'}} />Vos entrées ne sont pas valides</Form.Text> ;\n\n\n    // const passwordData = !props.passwordEdit ?\n    //     <div className='info-rows'>\n    //         <div className='label-and-info'>\n    //             <span className='info-label'>Mot de passe</span>\n    //             <span className='info-info'>•••••••••••••</span>\n    //         </div>\n    //         <div className='info-links' onClick={() => props.handleModification('password', props.passwordEdit)}>\n    //             <div className='div-links'>\n    //                 <div className='setting-and-arrow'>\n    //                     <IoSettingsOutline className='setting' />\n    //                     <IoIosArrowForward className='arrow' />\n    //                 </div>\n    //             </div>\n    //         </div>\n    //     </div> :\n    //     <Form className='forms-profile' onSubmit={props.handleSubmitPassword}>\n    //     <div className='w-100'>\n    //         <Form.Group controlId=\"currentPassword\" className='form-group-profile'>\n    //                 <Form.Label>Mot de passe actuel</Form.Label>\n    //                 <Form.Control onChange={props.handleChange} type=\"password\" placeholder=\"\" className='form-control-profile' maxLength=\"250\" autoFocus/>\n    //         </Form.Group>\n    //         <Form.Group controlId=\"newPassword\" className='form-group-profile mt-2'>\n    //                 <Form.Label>Nouveau mot de passe</Form.Label>\n    //                 <Form.Control onChange={props.handleChange} type=\"password\" placeholder=\"\" className='form-control-profile' maxLength=\"250\"/>\n    //                 <Form.Text className=\"text-muted\">6 caract. min, 1 majusc., 1 chiffre et 1 caract. spécial.</Form.Text>\n    //         </Form.Group>\n    //         <Form.Group controlId=\"newPasswordConfirmation\" className='form-group-profile mt-2'>\n    //                 <Form.Label>Confirmer le nouveau mot de passe</Form.Label>\n    //                 <Form.Control onChange={props.handleChange} type=\"password\" placeholder=\"\" className='form-control-profile' maxLength=\"250\"/>\n    //         </Form.Group>\n    //         <div style={{position: 'relative'}}>\n    //             {errorMsg}\n    //         </div>\n    //     </div>\n    //     <div className='div-buttons-form-profile'>\n    //         <Button variant=\"primary\" type=\"submit\" className='buttons-form-profile'>Enregistrer</Button>\n    //         <Button variant=\"danger\" type=\"button\" className='buttons-form-profile' onClick={() => props.handleModification('password', props.passwordEdit)}>Annuler</Button>\n    //     </div>\n    //     </Form>;\n\n    return (\n        <Fragment>\n            <Form.Group as={Row} className=\"mb-1\" controlId={props.id}>\n                <Form.Label column sm=\"2\">\n                    {props.label}\n                </Form.Label>\n                <Col sm=\"10\">\n                    <Form.Control\n                        value={props.value}\n                        onChange={props.handlePasswordChange}\n                        placeholder={props.placeholder}\n                        type=\"password\"\n                        autoComplete='off'\n                        maxLength={props.maxLength}\n                        className='form-control-profile'\n                    />\n                </Col>\n            </Form.Group>\n        </Fragment>\n    )\n\n}\n\nexport default PasswordSection"]},"metadata":{},"sourceType":"module"}