{"ast":null,"code":"var _jsxFileName = \"/home/gadacha/Bureau/matcha/src/components/MemberProfile/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FaChevronRight } from \"react-icons/fa\";\nimport { IoChatbubblesSharp } from \"react-icons/io5\";\nimport { MdSend } from \"react-icons/md\";\nimport { BsThreeDots } from \"react-icons/bs\";\nimport { IoMdHeart } from \"react-icons/io\";\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\nimport MsgIn from './MsgIn';\nimport MsgOut from './MsgOut';\nimport UserImage from \"../../images/user-image.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chat = props => {\n  _s();\n\n  // CHAT DRAWER ↓↓↓\n  const [chatDrawer, setChatDrawer] = useState(false);\n\n  const moveChatDrawer = e => {\n    e.preventDefault();\n    let chatElement = document.querySelector('.chat');\n    chatElement.classList.contains('chatOpen') ? chatElement.classList.remove('chatOpen') : chatElement.classList.add('chatOpen');\n    setChatDrawer(!chatDrawer);\n    props.onChatChange(!chatDrawer);\n  };\n\n  const theChatDrawer = chatDrawer ? /*#__PURE__*/_jsxDEV(FaChevronRight, {\n    className: \"iconChatDrawer\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 27\n  }, this) : /*#__PURE__*/_jsxDEV(IoChatbubblesSharp, {\n    className: \"iconChatDrawer\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 27\n  }, this);\n  const chatDrawerColor = chatDrawer ? 'rgb(1, 1, 3)' : '#343a40';\n  const chatContent = chatDrawer ? 'chat-content-open' : 'chat-content-close';\n  const allChat = [{\n    msg: \"Salut\",\n    userID: '934'\n  }, {\n    msg: \"Bonjour\",\n    userID: '000'\n  }, {\n    msg: \"Comment ca va ?\",\n    userID: '934'\n  }, {\n    msg: \"Ca va et toi\",\n    userID: '000'\n  }, {\n    msg: \"Oui ca va. Tu fais quoi ?\",\n    userID: '934'\n  }, {\n    msg: \"Rien de special et toi\",\n    userID: '000'\n  }, {\n    msg: \"Le Lorem Ipsum est simplement du faux texte employé dans la composition et la mise en page avant impression. Le Lorem Ipsum est le faux texte\",\n    userID: '934'\n  }, {\n    msg: \"Le Lorem Ipsum est simplement du faux texte employé dans la composition et la mise en page avant impression. \",\n    userID: '000'\n  }, {\n    msg: \"Le Lorem Ipsum est simplement du faux texte employé dans la composition et la mise en page avant impression. Le Lorem Ipsum est le faux texte\",\n    userID: '934'\n  }, {\n    msg: \"Le Lorem Ipsum est simplement du faux texte employé dans la composition et la mise en page avant impression. \",\n    userID: '000'\n  }, {\n    msg: \"Le Lorem Ipsum est simplement du faux texte employé dans la composition et la mise en page avant impression. Le Lorem Ipsum est le faux texte\",\n    userID: '934'\n  }, {\n    msg: \"Le Lorem Ipsum est simplement du faux texte employé dans la composition et la mise en page avant impression. \",\n    userID: '000'\n  }, {\n    msg: \"Non meme pas...\",\n    userID: '934'\n  }, {\n    msg: \"Au revoir\",\n    userID: '000'\n  }]; // CHAT MESSAGES ↓↓↓\n\n  const [chatMessages, setChatMessages] = useState(allChat); // WRITTEN MESSAGE ↓↓↓\n\n  const [theMessage, setTheMessage] = useState('');\n\n  const newMessage = e => {\n    setTheMessage(e.target.value);\n  }; // SEND MESSAGE ↓↓↓\n\n\n  const handleAddNewMsg = e => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (theMessage !== '') {\n      setChatMessages(prevState => [...prevState, {\n        msg: theMessage,\n        userID: '000'\n      }]);\n      setTheMessage('');\n    }\n  }; // SEND MSG WITH ENTER KEY ↓↓↓\n\n\n  const handleKeyDown = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      handleAddNewMsg(e);\n    }\n  }; // SEND BUTTON STYLE ↓↓↓\n\n\n  const sendCursor = theMessage === '' ? 'initial' : 'pointer';\n  const sendColor = theMessage === '' ? '#8FA3AD' : '#A159F5'; // SCROLL IN BOTTOM ↓↓↓\n\n  useEffect(() => {\n    const scrollChat = document.querySelector('.discussion');\n    scrollChat.scrollTop = scrollChat.scrollHeight;\n  }, [chatMessages]); // DELETE DISCUSSION ↓↓↓\n\n  const onConfirmDeleteDiscussion = () => {\n    setChatMessages([]);\n    props.onDeleteDiscussionConfirmation();\n  };\n\n  const deleteDiscussion = {\n    act: \"Supprimer la discussion\",\n    quest: \"supprimer le contenu de la discussion\",\n    onConfirm: onConfirmDeleteDiscussion\n  };\n\n  const handleDeleteDiscussion = () => {\n    chatMessages.length !== 0 && props.onDeleteDiscussion(deleteDiscussion);\n  };\n\n  const emptyChat = chatMessages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"empty-chat\",\n    children: \"La discussion est vide.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 23\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"iconChatDrawerDiv centerElementsInPage\",\n      style: {\n        backgroundColor: `${chatDrawerColor}`\n      },\n      onClick: moveChatDrawer,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"nb-notif-chat-drawer\",\n        children: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), theChatDrawer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: chatContent,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"discussionContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"interlocutor\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"centerElementsInPage\",\n            style: {\n              width: '60%',\n              height: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: UserImage,\n              alt: \"interlocutor\",\n              className: \"interlocutor-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"interlocutor-name\",\n              children: \"username-269428\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(IoMdHeart, {\n            size: \"23\",\n            color: \"#010103\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(NavDropdown, {\n            title: /*#__PURE__*/_jsxDEV(BsThreeDots, {\n              size: \"27\",\n              color: \"#010103\",\n              className: \"dlt-disc-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 45\n            }, this),\n            id: \"dropdown-delete-link\",\n            className: \"dropdown-delete-discussion-div\",\n            children: /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n              className: \"dropdown-delete-discussion\",\n              onClick: handleDeleteDiscussion,\n              children: [/*#__PURE__*/_jsxDEV(RiDeleteBin5Line, {\n                className: \"icons-dropdown\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 33\n              }, this), \"Suppr. discussion\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"discussion\",\n          children: [chatMessages.map(msg => {\n            if (msg.userID === '000') {\n              return /*#__PURE__*/_jsxDEV(MsgIn, {\n                msgContent: msg.msg\n              }, uuidv4(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 40\n              }, this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(MsgOut, {\n                msgContent: msg.msg\n              }, uuidv4(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 40\n              }, this);\n            }\n          }), emptyChat]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"text-to-send\",\n        onSubmit: handleAddNewMsg,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: theMessage,\n          onChange: newMessage,\n          onKeyDown: handleKeyDown,\n          className: \"chat-textarea\",\n          autoComplete: \"off\",\n          placeholder: \"Taper un message\",\n          minLength: \"1\",\n          maxLength: \"255\",\n          autoCapitalize: \"on\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"send-button\",\n          style: {\n            cursor: `${sendCursor}`\n          },\n          children: /*#__PURE__*/_jsxDEV(MdSend, {\n            className: \"send-icon\",\n            color: sendColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"qMhQCWy2LlGccW3dmBC3tQcu1to=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/gadacha/Bureau/matcha/src/components/MemberProfile/Chat.js"],"names":["React","useState","useEffect","v4","uuidv4","FaChevronRight","IoChatbubblesSharp","MdSend","BsThreeDots","IoMdHeart","NavDropdown","RiDeleteBin5Line","MsgIn","MsgOut","UserImage","Chat","props","chatDrawer","setChatDrawer","moveChatDrawer","e","preventDefault","chatElement","document","querySelector","classList","contains","remove","add","onChatChange","theChatDrawer","chatDrawerColor","chatContent","allChat","msg","userID","chatMessages","setChatMessages","theMessage","setTheMessage","newMessage","target","value","handleAddNewMsg","stopPropagation","prevState","handleKeyDown","key","shiftKey","sendCursor","sendColor","scrollChat","scrollTop","scrollHeight","onConfirmDeleteDiscussion","onDeleteDiscussionConfirmation","deleteDiscussion","act","quest","onConfirm","handleDeleteDiscussion","length","onDeleteDiscussion","emptyChat","backgroundColor","width","height","map","cursor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FaChevronRight } from \"react-icons/fa\";\nimport { IoChatbubblesSharp } from \"react-icons/io5\";\nimport { MdSend } from \"react-icons/md\";\nimport { BsThreeDots } from \"react-icons/bs\";\nimport { IoMdHeart } from \"react-icons/io\";\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\nimport MsgIn from './MsgIn';\nimport MsgOut from './MsgOut';\n\nimport UserImage from \"../../images/user-image.jpg\"\n\n\n\n\nconst Chat = (props) => {\n\n    // CHAT DRAWER ↓↓↓\n    const [chatDrawer, setChatDrawer] = useState(false)\n\n    const moveChatDrawer = e => {\n        e.preventDefault();\n        \n        let chatElement = document.querySelector('.chat');\n        \n        chatElement.classList.contains('chatOpen') ?\n        chatElement.classList.remove('chatOpen') :\n        chatElement.classList.add('chatOpen');\n        \n        setChatDrawer(!chatDrawer)\n        props.onChatChange(!chatDrawer)\n    }\n\n    const theChatDrawer = chatDrawer ?\n                          <FaChevronRight className='iconChatDrawer'/> :\n                          <IoChatbubblesSharp className='iconChatDrawer'/> ;\n\n    const chatDrawerColor = chatDrawer ?\n                            'rgb(1, 1, 3)' :\n                            '#343a40' ;\n\n    const chatContent = chatDrawer ?\n                        'chat-content-open' :\n                        'chat-content-close' ;\n\n    \n                        \n    const allChat = [\n        {\n            msg: \"Salut\",\n            userID: '934'\n        },\n        {\n            msg: \"Bonjour\",\n            userID: '000'\n        },\n        {\n            msg: \"Comment ca va ?\",\n            userID: '934'\n        },\n        {\n            msg: \"Ca va et toi\",\n            userID: '000'\n        },\n        {\n            msg: \"Oui ca va. Tu fais quoi ?\",\n            userID: '934'\n        },\n        {\n            msg: \"Rien de special et toi\",\n            userID: '000'\n        },\n        {\n            msg: \"Le Lorem Ipsum est simplement du faux texte employé dans la composition et la mise en page avant impression. Le Lorem Ipsum est le faux texte\",\n            userID: '934'\n        },\n        {\n            msg: \"Le Lorem Ipsum est simplement du faux texte employé dans la composition et la mise en page avant impression. \",\n            userID: '000'\n        },\n        {\n            msg: \"Le Lorem Ipsum est simplement du faux texte employé dans la composition et la mise en page avant impression. Le Lorem Ipsum est le faux texte\",\n            userID: '934'\n        },\n        {\n            msg: \"Le Lorem Ipsum est simplement du faux texte employé dans la composition et la mise en page avant impression. \",\n            userID: '000'\n        },\n        {\n            msg: \"Le Lorem Ipsum est simplement du faux texte employé dans la composition et la mise en page avant impression. Le Lorem Ipsum est le faux texte\",\n            userID: '934'\n        },\n        {\n            msg: \"Le Lorem Ipsum est simplement du faux texte employé dans la composition et la mise en page avant impression. \",\n            userID: '000'\n        },\n        {\n            msg: \"Non meme pas...\",\n            userID: '934'\n        },\n        {\n            msg: \"Au revoir\",\n            userID: '000'\n        }\n    ]\n    \n    // CHAT MESSAGES ↓↓↓\n    const [chatMessages, setChatMessages] = useState(allChat)\n    \n\n    // WRITTEN MESSAGE ↓↓↓\n    const [theMessage, setTheMessage] = useState('')\n\n    const newMessage = (e) => {\n        setTheMessage(e.target.value)\n    }\n    \n    \n    // SEND MESSAGE ↓↓↓\n    const handleAddNewMsg = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (theMessage !== '') {\n            setChatMessages(prevState => [...prevState, {\n                msg: theMessage,\n                userID: '000'\n            }]);\n            setTheMessage('');\n        }\n    }\n    \n\n    // SEND MSG WITH ENTER KEY ↓↓↓\n    const handleKeyDown = (e) => {\n        if (e.key === 'Enter' && !e.shiftKey) {\n            handleAddNewMsg(e);\n        }\n    }\n\n\n    // SEND BUTTON STYLE ↓↓↓\n    const sendCursor = theMessage === '' ? 'initial' : 'pointer' ;\n    const sendColor = theMessage === '' ? '#8FA3AD' : '#A159F5' ;\n\n\n    // SCROLL IN BOTTOM ↓↓↓\n    useEffect( () => {\n        const scrollChat = document.querySelector('.discussion')\n        scrollChat.scrollTop = scrollChat.scrollHeight\n    }, [chatMessages])\n    \n    \n    // DELETE DISCUSSION ↓↓↓\n    const onConfirmDeleteDiscussion = () => {\n        setChatMessages([]);\n        props.onDeleteDiscussionConfirmation();\n    }\n\n    const deleteDiscussion = {\n        act: \"Supprimer la discussion\",\n        quest: \"supprimer le contenu de la discussion\",\n        onConfirm: onConfirmDeleteDiscussion\n    }\n\n    const handleDeleteDiscussion = () => {\n        chatMessages.length !== 0 &&\n        props.onDeleteDiscussion(deleteDiscussion);\n        \n    }\n\n    const emptyChat = chatMessages.length === 0 ?\n                      <div className='empty-chat'>La discussion est vide.</div> :\n                      null;\n\n    \n    return (\n        <div className='chat'>\n            <div className='iconChatDrawerDiv centerElementsInPage' style={{backgroundColor:`${chatDrawerColor}`}} onClick={moveChatDrawer}>\n                <span className='nb-notif-chat-drawer'>3</span>\n                {theChatDrawer}\n            </div>\n            <div className={chatContent}>\n                <div className='discussionContainer'>\n                    <div className='interlocutor'>\n                        <div className='centerElementsInPage' style={{width: '60%', height: '100%'}}>\n                            <img src={UserImage} alt='interlocutor' className='interlocutor-image'/>\n                            <span className='interlocutor-name'>username-269428</span>\n                        </div>\n                        \n                        <IoMdHeart size='23' color='#010103' />\n                        <NavDropdown title={<BsThreeDots size='27' color='#010103' className='dlt-disc-icon' />} id=\"dropdown-delete-link\" className='dropdown-delete-discussion-div'>\n                            <NavDropdown.Item className='dropdown-delete-discussion' onClick={handleDeleteDiscussion} >\n                                <RiDeleteBin5Line className='icons-dropdown' />Suppr. discussion\n                            </NavDropdown.Item>\n                        </NavDropdown>\n                    </div>\n                    <div className='discussion'>\n                        {chatMessages.map( msg => {\n                            if (msg.userID === '000'){\n                                return <MsgIn key={uuidv4()} msgContent={msg.msg} />\n                            }\n                            else {\n                                return <MsgOut key={uuidv4()} msgContent={msg.msg} />\n                            }\n                        })}\n                        {emptyChat}\n                    </div>\n                </div>\n                <form className='text-to-send' onSubmit={handleAddNewMsg}>\n                    <textarea\n                        value={theMessage}\n                        onChange={newMessage}\n                        onKeyDown={handleKeyDown}\n                        className='chat-textarea'\n                        autoComplete='off'\n                        placeholder='Taper un message'\n                        minLength='1'\n                        maxLength='255'\n                        autoCapitalize='on'\n                    />\n                    <button type='submit'className='send-button' style={{cursor: `${sendCursor}` }} >\n                        <MdSend className='send-icon' color={sendColor} />\n                    </button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}