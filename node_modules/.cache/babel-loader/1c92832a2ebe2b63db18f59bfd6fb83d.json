{"ast":null,"code":"import _slicedToArray from \"/home/gadacha/Bureau/matcha/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\n\nvar Geolocation = function Geolocation() {\n  _s();\n\n  var _useState = useState({\n    loaded: false,\n    coordinates: {\n      lat: '',\n      lng: ''\n    }\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      location = _useState2[0],\n      setLocation = _useState2[1];\n\n  var onSuccess = function onSuccess(success) {};\n\n  var onError = function onError(error) {};\n\n  useEffect(function () {\n    if (\"geolocation\" in navigator) {\n      /* la géolocalisation est disponible */\n    } else {\n        /* la géolocalisation n'est pas disponible */\n      }\n\n    navigator.geolocation.getCurrentPosition(onSuccess, onError);\n  });\n  return location;\n};\n\n_s(Geolocation, \"Qal4QTV0EnusOeWHeYVaCkfa28w=\");\n\n_c = Geolocation;\nexport default Geolocation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Geolocation\");","map":{"version":3,"sources":["/home/gadacha/Bureau/matcha/src/components/Profile/Geolocation.js"],"names":["React","useState","useEffect","Geolocation","loaded","coordinates","lat","lng","location","setLocation","onSuccess","success","onError","error","navigator","geolocation","getCurrentPosition"],"mappings":";;;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAMA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA;;AAAA,kBAEUF,QAAQ,CAAE;AACtCG,IAAAA,MAAM,EAAE,KAD8B;AAEtCC,IAAAA,WAAW,EAAE;AAAEC,MAAAA,GAAG,EAAE,EAAP;AAAWC,MAAAA,GAAG,EAAE;AAAhB;AAFyB,GAAF,CAFlB;AAAA;AAAA,MAEfC,QAFe;AAAA,MAELC,WAFK;;AAQtB,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,OAAO,EAAI,CAE5B,CAFD;;AAKA,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK,EAAI,CAExB,CAFD;;AAIAX,EAAAA,SAAS,CAAE,YAAM;AAEb,QAAI,iBAAiBY,SAArB,EAAgC;AAC5B;AACH,KAFD,MAIA;AACI;AACH;;AAEDA,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCN,SAAzC,EAAoDE,OAApD;AAEH,GAZQ,CAAT;AAcA,SAAOJ,QAAP;AACH,CAhCD;;GAAML,W;;KAAAA,W;AAkCN,eAAeA,WAAf","sourcesContent":["import { React, useState, useEffect } from 'react';\n\n\n\n\n\nconst Geolocation = () => {\n\n    const [location, setLocation] = useState( {\n        loaded: false,\n        coordinates: { lat: '', lng: '' }\n    } );\n\n    \n    const onSuccess = success => {\n        \n    }\n\n\n    const onError = error => {\n        \n    }\n\n    useEffect( () => {\n\n        if (\"geolocation\" in navigator) {\n            /* la géolocalisation est disponible */\n        }\n        else\n        {\n            /* la géolocalisation n'est pas disponible */\n        }\n\n        navigator.geolocation.getCurrentPosition(onSuccess, onError);\n\n    })\n\n    return location;\n}\n\nexport default Geolocation;"]},"metadata":{},"sourceType":"module"}