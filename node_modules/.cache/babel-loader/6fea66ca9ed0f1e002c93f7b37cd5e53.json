{"ast":null,"code":"var _jsxFileName = \"/home/gadacha/Bureau/matcha/src/components/Profile/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Fragment } from 'react';\nimport Navbar from '../NavBar/NavBar';\nimport UserInfoSection from './UserInfoSection';\nimport PasswordSection from './PasswordSection';\nimport AlertMsg from '../AlertMsg/AlertMsg';\nimport { NAMES_REGEX, USERNAME_REGEX, EMAIL_REGEX, PASSWORD_REGEX } from '../../other/Regex';\nimport { v4 as uuidv4 } from 'uuid';\nimport Alert from 'react-bootstrap/Alert';\nimport Form from 'react-bootstrap/Form';\nimport { RiUser3Fill } from 'react-icons/ri';\nimport { AiOutlineCheck } from 'react-icons/ai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = () => {\n  _s();\n\n  useEffect(() => {\n    document.title = 'Profil - Matcha';\n  }, []); // --------------------------------------------------------\n\n  /* modification of user information */\n\n  const infoEdit$ = {\n    lastname: false,\n    firstname: false,\n    username: false,\n    email: false,\n    password: false\n  };\n  const [infoEdit, setInfoEdit] = useState(infoEdit$);\n\n  const handleModification = (idInfo, thisInfo) => {\n    setInfoEdit(Object.assign(infoEdit, infoEdit$));\n    setData(Object.assign(data, _data)); // /!\\  À revoir. Lors de l'enregistrement de la nouvelle info puis le click sur 'annuler' ou 'modifier' l'info revient à l'origine.\n\n    setErrorDatas(Object.assign(errorDatas, errorDatas$));\n    setInfoEdit({ ...infoEdit,\n      [idInfo]: !thisInfo\n    });\n  }; // --------------------------------------------------------\n  // INFOS USER DATA ↓↓↓\n\n\n  const _data = {\n    lastname: 'Gadacha',\n    firstname: 'Honsse',\n    username: 'Username93',\n    email: 'test@gmail.com'\n  };\n  const [data, setData] = useState(_data);\n\n  const handleChange = e => {\n    setData({ ...data,\n      [e.target.id]: e.target.value\n    });\n  };\n\n  const handleNewValues = (idInfo, thisInfo) => {\n    setInfoEdit(Object.assign(infoEdit, infoEdit$));\n    setErrorDatas(Object.assign(errorDatas, errorDatas$));\n    setInfoEdit({ ...infoEdit,\n      [idInfo]: !thisInfo\n    });\n  }; // --------------------------------------------------------\n\n\n  const errorDatas$ = {\n    infosError: false,\n    passwordsError: false\n  };\n  const [errorDatas, setErrorDatas] = useState(errorDatas$); // --------------------------------------------------------\n\n  const userData = [{\n    label: 'Nom',\n    info: data.lastname,\n    id: 'lastname',\n    placeholder: '...',\n    infoEdit: infoEdit.lastname,\n    maxLength: \"30\"\n  }, {\n    label: 'Prénom',\n    info: data.firstname,\n    id: 'firstname',\n    placeholder: '...',\n    infoEdit: infoEdit.firstname,\n    maxLength: \"30\"\n  }, {\n    label: 'Nom d\\'utilisateur',\n    info: data.username,\n    placeholder: 'ex: pseudo, pseudo46, pseudo-46, pseudo_46 (15 car. max).',\n    id: 'username',\n    infoEdit: infoEdit.username,\n    maxLength: \"15\"\n  }, {\n    label: 'E-mail',\n    info: data.email,\n    placeholder: 'abc@exemple.com',\n    id: 'email',\n    infoEdit: infoEdit.email,\n    maxLength: \"250\"\n  }];\n  const passwordData = [{\n    label: 'Actuel',\n    id: 'currentPassword',\n    placeholder: '...',\n    maxLength: \"250\"\n  }, {\n    label: 'Nouveau',\n    id: 'newPassword',\n    placeholder: '6 caract. min, 1 majusc., 1 chiffre et 1 caract. spécial.',\n    maxLength: \"250\"\n  }, {\n    label: 'Confirmation',\n    id: 'newPasswordConfirmation',\n    placeholder: '...',\n    maxLength: \"250\"\n  }]; // ----------------------------PASSWORD CHECKING----------------------------\n\n  const handleSubmitPassword = e => {\n    e.preventDefault();\n\n    if (currentPassword !== '' && newPassword !== '' && newPasswordConfirmation !== '') {\n      if (currentPassword) {\n        // if the currentPassword === userPassword\n        if (PASSWORD_REGEX.test(newPassword) && newPassword === newPasswordConfirmation) {\n          handleModification();\n          document.body.scrollTop = document.documentElement.scrollTop = 0; // handleSuccess()\n\n          updateSuccessAlert();\n          console.log('\"' + newPassword + '\" is a new password ✓');\n        } else {\n          setErrorDatas({ ...errorDatas,\n            passwordsError: true\n          });\n        }\n      } else {\n        setErrorDatas({ ...errorDatas,\n          passwordsError: true\n        });\n      }\n    }\n  }; // ----------------------------INFO CHECKING----------------------------\n\n\n  const handleSubmitInfo = e => {\n    e.preventDefault();\n\n    if (data.lastname !== '' && data.firstname !== '' && data.username !== '' && data.email !== '') {\n      if (!NAMES_REGEX.test(data.lastname) || !NAMES_REGEX.test(data.firstname) || !USERNAME_REGEX.test(data.username) || !EMAIL_REGEX.test(data.email)) {\n        setErrorDatas({ ...errorDatas,\n          infosError: true\n        });\n      } else {\n        handleNewValues();\n        document.body.scrollTop = document.documentElement.scrollTop = 0; // handleSuccess()\n\n        updateSuccessAlert();\n        console.log(_data);\n        console.log('\"' + data.lastname + '\"\\n\"' + data.firstname + '\"\\n\"' + data.username + '\"\\nis a new infos ✓');\n      }\n    }\n  }; // ALERT ↓↓↓\n\n\n  const [alertMessages, setAlertMessages] = useState([]);\n\n  const handleNewAlert = newAlert => {\n    setAlertMessages(prevState => prevState.slice(1));\n    setAlertMessages(prevState => [...prevState, newAlert]);\n  };\n\n  const updateSuccessAlert = () => {\n    handleNewAlert({\n      variant: \"success\",\n      information: \"Vos informations ont été mis à jour.\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this), alertMessages.map(alert => {\n      return /*#__PURE__*/_jsxDEV(AlertMsg, {\n        variant: alert.variant,\n        information: alert.information\n      }, uuidv4(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"big-info-container centerElementsInPage\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"personal-information\",\n        children: \"Vos informations personelles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-container mb-2\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmitInfo,\n          children: [userData.map(data => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(UserInfoSection, {\n                label: data.label,\n                info: data.info,\n                placeholder: data.placeholder,\n                id: data.id,\n                maxLength: data.maxLength,\n                infoEdit: data.infoEdit,\n                handleChange: handleChange,\n                errorMsg: errorDatas.infosError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 37\n              }, this)\n            }, uuidv4(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 33\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"buttons-form-profile\",\n            children: \"Enregistrer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"personal-information\",\n        children: \"Modifier votre mot de passe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleSubmitPassword,\n            children: [passwordData.map(data => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(PasswordSection, {\n                  label: data.label,\n                  placeholder: data.placeholder,\n                  id: data.id,\n                  maxLength: data.maxLength,\n                  handleChange: handleChange,\n                  errorMsg: errorDatas.passwordsError\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 41\n                }, this)\n              }, uuidv4(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 37\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"buttons-form-profile\",\n              children: \"Enregistrer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Profile, \"zQdY46X9sWXMnQgCVqaqBG33rD4=\");\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/gadacha/Bureau/matcha/src/components/Profile/Profile.js"],"names":["React","useState","useEffect","Fragment","Navbar","UserInfoSection","PasswordSection","AlertMsg","NAMES_REGEX","USERNAME_REGEX","EMAIL_REGEX","PASSWORD_REGEX","v4","uuidv4","Alert","Form","RiUser3Fill","AiOutlineCheck","Profile","document","title","infoEdit$","lastname","firstname","username","email","password","infoEdit","setInfoEdit","handleModification","idInfo","thisInfo","Object","assign","setData","data","_data","setErrorDatas","errorDatas","errorDatas$","handleChange","e","target","id","value","handleNewValues","infosError","passwordsError","userData","label","info","placeholder","maxLength","passwordData","handleSubmitPassword","preventDefault","currentPassword","newPassword","newPasswordConfirmation","test","body","scrollTop","documentElement","updateSuccessAlert","console","log","handleSubmitInfo","alertMessages","setAlertMessages","handleNewAlert","newAlert","prevState","slice","variant","information","map","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,WAAT,EAAsBC,cAAtB,EAAsCC,WAAtC,EAAmDC,cAAnD,QAAyE,mBAAzE;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,cAAT,QAA+B,gBAA/B;;;AAIA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAElBhB,EAAAA,SAAS,CAAE,MAAM;AACbiB,IAAAA,QAAQ,CAACC,KAAT,GAAiB,iBAAjB;AACH,GAFQ,EAEN,EAFM,CAAT,CAFkB,CAMtB;;AAEI;;AACA,QAAMC,SAAS,GAAG;AACdC,IAAAA,QAAQ,EAAE,KADI;AAEdC,IAAAA,SAAS,EAAE,KAFG;AAGdC,IAAAA,QAAQ,EAAE,KAHI;AAIdC,IAAAA,KAAK,EAAE,KAJO;AAKdC,IAAAA,QAAQ,EAAE;AALI,GAAlB;AAQA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0B3B,QAAQ,CAACoB,SAAD,CAAxC;;AAEA,QAAMQ,kBAAkB,GAAG,CAACC,MAAD,EAASC,QAAT,KAAsB;AAE7CH,IAAAA,WAAW,CAACI,MAAM,CAACC,MAAP,CAAcN,QAAd,EAAwBN,SAAxB,CAAD,CAAX;AACAa,IAAAA,OAAO,CAACF,MAAM,CAACC,MAAP,CAAcE,IAAd,EAAoBC,KAApB,CAAD,CAAP,CAH6C,CAGT;;AACpCC,IAAAA,aAAa,CAACL,MAAM,CAACC,MAAP,CAAcK,UAAd,EAA0BC,WAA1B,CAAD,CAAb;AACAX,IAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAc,OAACG,MAAD,GAAU,CAACC;AAAzB,KAAD,CAAX;AACH,GAND,CAnBkB,CA2BtB;AAEI;;;AACA,QAAMK,KAAK,GAAG;AACVd,IAAAA,QAAQ,EAAE,SADA;AAEVC,IAAAA,SAAS,EAAE,QAFD;AAGVC,IAAAA,QAAQ,EAAE,YAHA;AAIVC,IAAAA,KAAK,EAAE;AAJG,GAAd;AAOA,QAAM,CAACU,IAAD,EAAOD,OAAP,IAAkBjC,QAAQ,CAACmC,KAAD,CAAhC;;AAEA,QAAMI,YAAY,GAAGC,CAAC,IAAI;AACtBP,IAAAA,OAAO,CAAC,EAAC,GAAGC,IAAJ;AAAU,OAACM,CAAC,CAACC,MAAF,CAASC,EAAV,GAAeF,CAAC,CAACC,MAAF,CAASE;AAAlC,KAAD,CAAP;AACH,GAFD;;AAIA,QAAMC,eAAe,GAAG,CAACf,MAAD,EAASC,QAAT,KAAsB;AAC1CH,IAAAA,WAAW,CAACI,MAAM,CAACC,MAAP,CAAcN,QAAd,EAAwBN,SAAxB,CAAD,CAAX;AACAgB,IAAAA,aAAa,CAACL,MAAM,CAACC,MAAP,CAAcK,UAAd,EAA0BC,WAA1B,CAAD,CAAb;AACAX,IAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAc,OAACG,MAAD,GAAU,CAACC;AAAzB,KAAD,CAAX;AACH,GAJD,CA3CkB,CAiDtB;;;AAEI,QAAMQ,WAAW,GAAG;AACZO,IAAAA,UAAU,EAAE,KADA;AAEZC,IAAAA,cAAc,EAAE;AAFJ,GAApB;AAKA,QAAM,CAACT,UAAD,EAAaD,aAAb,IAA8BpC,QAAQ,CAACsC,WAAD,CAA5C,CAxDkB,CA0DtB;;AAEI,QAAMS,QAAQ,GAAG,CACb;AACIC,IAAAA,KAAK,EAAE,KADX;AAEIC,IAAAA,IAAI,EAAEf,IAAI,CAACb,QAFf;AAGIqB,IAAAA,EAAE,EAAE,UAHR;AAIIQ,IAAAA,WAAW,EAAE,KAJjB;AAKIxB,IAAAA,QAAQ,EAAEA,QAAQ,CAACL,QALvB;AAMI8B,IAAAA,SAAS,EAAE;AANf,GADa,EASb;AACIH,IAAAA,KAAK,EAAE,QADX;AAEIC,IAAAA,IAAI,EAAEf,IAAI,CAACZ,SAFf;AAGIoB,IAAAA,EAAE,EAAE,WAHR;AAIIQ,IAAAA,WAAW,EAAE,KAJjB;AAKIxB,IAAAA,QAAQ,EAAEA,QAAQ,CAACJ,SALvB;AAMI6B,IAAAA,SAAS,EAAE;AANf,GATa,EAiBb;AACIH,IAAAA,KAAK,EAAE,oBADX;AAEIC,IAAAA,IAAI,EAAEf,IAAI,CAACX,QAFf;AAGI2B,IAAAA,WAAW,EAAE,2DAHjB;AAIIR,IAAAA,EAAE,EAAE,UAJR;AAKIhB,IAAAA,QAAQ,EAAEA,QAAQ,CAACH,QALvB;AAMI4B,IAAAA,SAAS,EAAE;AANf,GAjBa,EAyBb;AACIH,IAAAA,KAAK,EAAE,QADX;AAEIC,IAAAA,IAAI,EAAEf,IAAI,CAACV,KAFf;AAGI0B,IAAAA,WAAW,EAAE,iBAHjB;AAIIR,IAAAA,EAAE,EAAE,OAJR;AAKIhB,IAAAA,QAAQ,EAAEA,QAAQ,CAACF,KALvB;AAMI2B,IAAAA,SAAS,EAAE;AANf,GAzBa,CAAjB;AAmCA,QAAMC,YAAY,GAAG,CACjB;AACIJ,IAAAA,KAAK,EAAE,QADX;AAEIN,IAAAA,EAAE,EAAE,iBAFR;AAGIQ,IAAAA,WAAW,EAAE,KAHjB;AAIIC,IAAAA,SAAS,EAAE;AAJf,GADiB,EAOjB;AACIH,IAAAA,KAAK,EAAE,SADX;AAEIN,IAAAA,EAAE,EAAE,aAFR;AAGIQ,IAAAA,WAAW,EAAE,2DAHjB;AAIIC,IAAAA,SAAS,EAAE;AAJf,GAPiB,EAajB;AACIH,IAAAA,KAAK,EAAE,cADX;AAEIN,IAAAA,EAAE,EAAE,yBAFR;AAGIQ,IAAAA,WAAW,EAAE,KAHjB;AAIIC,IAAAA,SAAS,EAAE;AAJf,GAbiB,CAArB,CA/FkB,CAoHtB;;AAEI,QAAME,oBAAoB,GAAGb,CAAC,IAAI;AAC9BA,IAAAA,CAAC,CAACc,cAAF;;AAEA,QAAIC,eAAe,KAAK,EAApB,IAA0BC,WAAW,KAAK,EAA1C,IAAgDC,uBAAuB,KAAK,EAAhF,EAAoF;AAChF,UAAIF,eAAJ,EAAqB;AAAE;AACnB,YAAI7C,cAAc,CAACgD,IAAf,CAAoBF,WAApB,KAAoCA,WAAW,KAAKC,uBAAxD,EAAiF;AAC7E7B,UAAAA,kBAAkB;AAClBV,UAAAA,QAAQ,CAACyC,IAAT,CAAcC,SAAd,GAA0B1C,QAAQ,CAAC2C,eAAT,CAAyBD,SAAzB,GAAqC,CAA/D,CAF6E,CAG7E;;AACAE,UAAAA,kBAAkB;AAClBC,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAMR,WAAN,GAAoB,uBAAhC;AAEH,SAPD,MAOO;AACHpB,UAAAA,aAAa,CAAC,EAAC,GAAGC,UAAJ;AAAgBS,YAAAA,cAAc,EAAE;AAAhC,WAAD,CAAb;AACH;AACJ,OAXD,MAWO;AACHV,QAAAA,aAAa,CAAC,EAAC,GAAGC,UAAJ;AAAgBS,UAAAA,cAAc,EAAE;AAAhC,SAAD,CAAb;AACH;AACJ;AACJ,GAnBD,CAtHkB,CA2ItB;;;AAEA,QAAMmB,gBAAgB,GAAGzB,CAAC,IAAI;AAC1BA,IAAAA,CAAC,CAACc,cAAF;;AAEA,QAAIpB,IAAI,CAACb,QAAL,KAAkB,EAAlB,IAAwBa,IAAI,CAACZ,SAAL,KAAmB,EAA3C,IAAiDY,IAAI,CAACX,QAAL,KAAkB,EAAnE,IAAyEW,IAAI,CAACV,KAAL,KAAe,EAA5F,EAAgG;AAC5F,UAAI,CAACjB,WAAW,CAACmD,IAAZ,CAAiBxB,IAAI,CAACb,QAAtB,CAAD,IAAoC,CAACd,WAAW,CAACmD,IAAZ,CAAiBxB,IAAI,CAACZ,SAAtB,CAArC,IAAyE,CAACd,cAAc,CAACkD,IAAf,CAAoBxB,IAAI,CAACX,QAAzB,CAA1E,IAAgH,CAACd,WAAW,CAACiD,IAAZ,CAAiBxB,IAAI,CAACV,KAAtB,CAArH,EAAmJ;AAC/IY,QAAAA,aAAa,CAAC,EAAC,GAAGC,UAAJ;AAAgBQ,UAAAA,UAAU,EAAE;AAA5B,SAAD,CAAb;AACH,OAFD,MAGK;AACDD,QAAAA,eAAe;AACf1B,QAAAA,QAAQ,CAACyC,IAAT,CAAcC,SAAd,GAA0B1C,QAAQ,CAAC2C,eAAT,CAAyBD,SAAzB,GAAqC,CAA/D,CAFC,CAGD;;AACAE,QAAAA,kBAAkB;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAY7B,KAAZ;AACA4B,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAM9B,IAAI,CAACb,QAAX,GAAsB,MAAtB,GAA+Ba,IAAI,CAACZ,SAApC,GAAgD,MAAhD,GAAyDY,IAAI,CAACX,QAA9D,GAAwE,qBAApF;AACH;AACJ;AACJ,GAhBD,CA7IsB,CAgKlB;;;AACA,QAAM,CAAC2C,aAAD,EAAgBC,gBAAhB,IAAoCnE,QAAQ,CAAC,EAAD,CAAlD;;AAGA,QAAMoE,cAAc,GAAIC,QAAD,IAAc;AAEjCF,IAAAA,gBAAgB,CAACG,SAAS,IAAIA,SAAS,CAACC,KAAV,CAAgB,CAAhB,CAAd,CAAhB;AACAJ,IAAAA,gBAAgB,CAACG,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAeD,QAAf,CAAd,CAAhB;AACH,GAJD;;AAMA,QAAMP,kBAAkB,GAAG,MAAM;AAC7BM,IAAAA,cAAc,CAAC;AAACI,MAAAA,OAAO,EAAE,SAAV;AACCC,MAAAA,WAAW,EAAE;AADd,KAAD,CAAd;AAEH,GAHD;;AAOA,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKP,aAAa,CAACQ,GAAd,CAAmBC,KAAK,IAAI;AACzB,0BACI,QAAC,QAAD;AAEI,QAAA,OAAO,EAAEA,KAAK,CAACH,OAFnB;AAGI,QAAA,WAAW,EAAEG,KAAK,CAACF;AAHvB,SACS7D,MAAM,EADf;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH,KARA,CAFL,eAWI;AAAK,MAAA,SAAS,EAAC,yCAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAEqD,gBAAhB;AAAA,qBACMlB,QAAQ,CAAC2B,GAAT,CAAcxC,IAAI,IAAI;AACpB,gCACI;AAAA,qCACI,QAAC,eAAD;AACI,gBAAA,KAAK,EAAEA,IAAI,CAACc,KADhB;AAEI,gBAAA,IAAI,EAAEd,IAAI,CAACe,IAFf;AAGI,gBAAA,WAAW,EAAEf,IAAI,CAACgB,WAHtB;AAII,gBAAA,EAAE,EAAEhB,IAAI,CAACQ,EAJb;AAKI,gBAAA,SAAS,EAAER,IAAI,CAACiB,SALpB;AAMI,gBAAA,QAAQ,EAAEjB,IAAI,CAACR,QANnB;AAOI,gBAAA,YAAY,EAAEa,YAPlB;AAQI,gBAAA,QAAQ,EAAEF,UAAU,CAACQ;AARzB;AAAA;AAAA;AAAA;AAAA;AADJ,eAAUjC,MAAM,EAAhB;AAAA;AAAA;AAAA;AAAA,oBADJ;AAaC,WAdH,CADN,eAiBI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,sBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAyBI;AAAI,QAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBJ,eA0BQ;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACI;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,QAAQ,EAAEyC,oBAAhB;AAAA,uBACED,YAAY,CAACsB,GAAb,CAAkBxC,IAAI,IAAI;AACxB,kCACI;AAAA,uCACI,QAAC,eAAD;AACI,kBAAA,KAAK,EAAEA,IAAI,CAACc,KADhB;AAEI,kBAAA,WAAW,EAAEd,IAAI,CAACgB,WAFtB;AAGI,kBAAA,EAAE,EAAEhB,IAAI,CAACQ,EAHb;AAII,kBAAA,SAAS,EAAER,IAAI,CAACiB,SAJpB;AAKI,kBAAA,YAAY,EAAEZ,YALlB;AAMI,kBAAA,QAAQ,EAAEF,UAAU,CAACS;AANzB;AAAA;AAAA;AAAA;AAAA;AADJ,iBAAUlC,MAAM,EAAhB;AAAA;AAAA;AAAA;AAAA,sBADJ;AAWC,aAZH,CADF,eAeI;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,SAAS,EAAC,sBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA1BR;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgEH,CAjPD;;GAAMK,O;;KAAAA,O;AAmPN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport Navbar from '../NavBar/NavBar';\nimport UserInfoSection from './UserInfoSection'\nimport PasswordSection from './PasswordSection'\nimport AlertMsg from '../AlertMsg/AlertMsg';\nimport { NAMES_REGEX, USERNAME_REGEX, EMAIL_REGEX, PASSWORD_REGEX } from '../../other/Regex';\nimport { v4 as uuidv4 } from 'uuid';\nimport Alert from 'react-bootstrap/Alert'\nimport Form from 'react-bootstrap/Form'\nimport { RiUser3Fill } from 'react-icons/ri';\nimport { AiOutlineCheck } from 'react-icons/ai';\n\n\n\nconst Profile = () => {\n\n    useEffect( () => {\n        document.title = 'Profil - Matcha'\n    }, [])\n\n// --------------------------------------------------------\n\n    /* modification of user information */\n    const infoEdit$ = {\n        lastname: false,\n        firstname: false,\n        username: false,\n        email: false,\n        password: false\n    }\n\n    const [infoEdit, setInfoEdit] = useState(infoEdit$)\n\n    const handleModification = (idInfo, thisInfo) => {\n\n        setInfoEdit(Object.assign(infoEdit, infoEdit$))\n        setData(Object.assign(data, _data)) // /!\\  À revoir. Lors de l'enregistrement de la nouvelle info puis le click sur 'annuler' ou 'modifier' l'info revient à l'origine.\n        setErrorDatas(Object.assign(errorDatas, errorDatas$))\n        setInfoEdit({...infoEdit, [idInfo]: !thisInfo})\n    }\n\n// --------------------------------------------------------\n\n    // INFOS USER DATA ↓↓↓\n    const _data = {\n        lastname: 'Gadacha',\n        firstname: 'Honsse',\n        username: 'Username93',\n        email: 'test@gmail.com'\n    }\n\n    const [data, setData] = useState(_data);\n    \n    const handleChange = e => {\n        setData({...data, [e.target.id]: e.target.value});\n    }\n\n    const handleNewValues = (idInfo, thisInfo) => {\n        setInfoEdit(Object.assign(infoEdit, infoEdit$))\n        setErrorDatas(Object.assign(errorDatas, errorDatas$))\n        setInfoEdit({...infoEdit, [idInfo]: !thisInfo})\n    }\n\n// --------------------------------------------------------\n    \n    const errorDatas$ = {\n            infosError: false,\n            passwordsError: false\n    }\n\n    const [errorDatas, setErrorDatas] = useState(errorDatas$)\n\n// --------------------------------------------------------\n\n    const userData = [\n        {\n            label: 'Nom',\n            info: data.lastname,\n            id: 'lastname',\n            placeholder: '...',\n            infoEdit: infoEdit.lastname,\n            maxLength: \"30\"\n        },\n        {\n            label: 'Prénom',\n            info: data.firstname,\n            id: 'firstname',\n            placeholder: '...',\n            infoEdit: infoEdit.firstname,\n            maxLength: \"30\"\n        },\n        {\n            label: 'Nom d\\'utilisateur',\n            info: data.username,\n            placeholder: 'ex: pseudo, pseudo46, pseudo-46, pseudo_46 (15 car. max).',\n            id: 'username',\n            infoEdit: infoEdit.username,\n            maxLength: \"15\"\n        },\n        {\n            label: 'E-mail',\n            info: data.email,\n            placeholder: 'abc@exemple.com',\n            id: 'email',\n            infoEdit: infoEdit.email,\n            maxLength: \"250\"\n        }\n    ]\n\n    const passwordData = [\n        {\n            label: 'Actuel',\n            id: 'currentPassword',\n            placeholder: '...',\n            maxLength: \"250\"\n        },\n        {\n            label: 'Nouveau',\n            id: 'newPassword',\n            placeholder: '6 caract. min, 1 majusc., 1 chiffre et 1 caract. spécial.',\n            maxLength: \"250\"\n        },\n        {\n            label: 'Confirmation',\n            id: 'newPasswordConfirmation',\n            placeholder: '...',\n            maxLength: \"250\"\n        }\n    ]\n\n// ----------------------------PASSWORD CHECKING----------------------------\n\n    const handleSubmitPassword = e => {\n        e.preventDefault();\n\n        if (currentPassword !== '' && newPassword !== '' && newPasswordConfirmation !== '') {\n            if (currentPassword) { // if the currentPassword === userPassword\n                if (PASSWORD_REGEX.test(newPassword) && newPassword === newPasswordConfirmation) {\n                    handleModification();\n                    document.body.scrollTop = document.documentElement.scrollTop = 0\n                    // handleSuccess()\n                    updateSuccessAlert();\n                    console.log('\"' + newPassword + '\" is a new password ✓');\n\n                } else {\n                    setErrorDatas({...errorDatas, passwordsError: true})\n                }\n            } else {\n                setErrorDatas({...errorDatas, passwordsError: true})\n            }\n        }\n    }\n\n// ----------------------------INFO CHECKING----------------------------\n\nconst handleSubmitInfo = e => {\n    e.preventDefault();\n\n    if (data.lastname !== '' && data.firstname !== '' && data.username !== '' && data.email !== '') {\n        if (!NAMES_REGEX.test(data.lastname) || !NAMES_REGEX.test(data.firstname) || !USERNAME_REGEX.test(data.username) || !EMAIL_REGEX.test(data.email)) {\n            setErrorDatas({...errorDatas, infosError: true})\n        }\n        else {\n            handleNewValues();\n            document.body.scrollTop = document.documentElement.scrollTop = 0;\n            // handleSuccess()\n            updateSuccessAlert();\n            console.log(_data);\n            console.log('\"' + data.lastname + '\"\\n\"' + data.firstname + '\"\\n\"' + data.username+ '\"\\nis a new infos ✓');\n        }\n    }\n}\n\n\n    // ALERT ↓↓↓\n    const [alertMessages, setAlertMessages] = useState([])\n\n\n    const handleNewAlert = (newAlert) => {\n\n        setAlertMessages(prevState => prevState.slice(1));\n        setAlertMessages(prevState => [...prevState, newAlert]);\n    }\n\n    const updateSuccessAlert = () => {\n        handleNewAlert({variant: \"success\",\n                        information: \"Vos informations ont été mis à jour.\"})\n    }\n\n\n\n    return (\n        <Fragment>\n            <Navbar />\n            {alertMessages.map( alert => {\n                return (\n                    <AlertMsg\n                        key={uuidv4()}\n                        variant={alert.variant}\n                        information={alert.information}\n                    />\n                )\n            })}\n            <div className='big-info-container centerElementsInPage'>\n                <h2 className='personal-information'>Vos informations personelles</h2>\n                <div className='info-container mb-2'>\n                    <Form onSubmit={handleSubmitInfo}>\n                        { userData.map( data => {\n                            return (\n                                <div key={uuidv4()}>\n                                    <UserInfoSection \n                                        label={data.label}\n                                        info={data.info}\n                                        placeholder={data.placeholder}\n                                        id={data.id}\n                                        maxLength={data.maxLength}\n                                        infoEdit={data.infoEdit}\n                                        handleChange={handleChange}\n                                        errorMsg={errorDatas.infosError}\n                                    />\n                                </div> )\n                            })\n                        }\n                        <button type='submit' className='buttons-form-profile'>\n                            Enregistrer\n                        </button>\n                    </Form>\n                </div>\n                <h2 className='personal-information'>Modifier votre mot de passe</h2>\n                    <div className='info-container'>\n                        <div>\n                            <Form onSubmit={handleSubmitPassword}>\n                            { passwordData.map( data => {\n                                return (\n                                    <div key={uuidv4()}>\n                                        <PasswordSection\n                                            label={data.label}\n                                            placeholder={data.placeholder}\n                                            id={data.id}\n                                            maxLength={data.maxLength}\n                                            handleChange={handleChange}\n                                            errorMsg={errorDatas.passwordsError}\n                                        />\n                                    </div> )\n                                })\n                            }\n                                <button type='submit' className='buttons-form-profile'>\n                                    Enregistrer\n                                </button>\n                            </Form>\n                        </div>\n                    </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default Profile"]},"metadata":{},"sourceType":"module"}